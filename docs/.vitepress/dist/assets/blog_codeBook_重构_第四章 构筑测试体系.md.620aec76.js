import{_ as a,o as e,c as o,Q as t}from"./chunks/framework.a6386e6f.js";const f=JSON.parse('{"title":"第四章 构筑测试体系","description":"","frontmatter":{},"headers":[],"relativePath":"blog/codeBook/重构/第四章 构筑测试体系.md","filePath":"blog/codeBook/重构/第四章 构筑测试体系.md","lastUpdated":1698394224000}'),r={name:"blog/codeBook/重构/第四章 构筑测试体系.md"},_=t('<h1 id="第四章-构筑测试体系" tabindex="-1">第四章 构筑测试体系 <a class="header-anchor" href="#第四章-构筑测试体系" aria-label="Permalink to &quot;第四章 构筑测试体系&quot;">​</a></h1><h2 id="自我测试代码的价值" tabindex="-1">自我测试代码的价值 <a class="header-anchor" href="#自我测试代码的价值" aria-label="Permalink to &quot;自我测试代码的价值&quot;">​</a></h2><ul><li>确保所有测试都完全自动化，让它们检查自己的测试结果。</li><li>一整组测试就是一个强大的bug侦查器，能大大缩减查找bug的时间。</li><li>撰写测试代码的最有用时机就是在开始编程之前。</li></ul><h2 id="c-中的单元测试" tabindex="-1">C#中的单元测试 <a class="header-anchor" href="#c-中的单元测试" aria-label="Permalink to &quot;C#中的单元测试&quot;">​</a></h2><p><a href="craftdocs://open?blockId=E9EF2185-87E0-4D1D-9D7F-C75B9065805B&amp;spaceId=57df2bfc-89bc-40b2-8b62-de5a5376ca83" target="_blank" rel="noreferrer">Nunit单元测试</a></p>',5),c=[_];function l(d,i,n,s,h,b){return e(),o("div",null,c)}const u=a(r,[["render",l]]);export{f as __pageData,u as default};
