const e=`{"documentCount":210,"nextId":210,"documentIds":{"0":"/aboutme#about-me","1":"/aboutme#hi-there-i-m-chen-tao-👋","2":"/blog/codeBook/CLR/1-CLR基础#_1-clr基础","3":"/blog/codeBook/CLR/1-CLR基础#_1、clr的核心功能-内存管理、程序集加载、安全性、异常处理和线程同步","4":"/blog/codeBook/CLR/1-CLR基础#_2、编译源代码过程","5":"/blog/codeBook/CLR/1-CLR基础#_3、源代码文件-编译器-托管模块-il代码和元数据","6":"/blog/codeBook/CLR/1-CLR基础#_4、将托管模块合并成程序集","7":"/blog/codeBook/CLR/2-类型基础#_2-类型基础","8":"/blog/codeBook/CLR/2-类型基础#_1、所有类型都从system-object派生","9":"/blog/codeBook/CLR/2-类型基础#_2、类型转换","10":"/blog/codeBook/CLR/2-类型基础#_3、运行时的相互关系","11":"/blog/codeBook/CLR/3-基元类型、引用类型和值类型#_3-基元类型、引用类型和值类型","12":"/blog/codeBook/CLR/3-基元类型、引用类型和值类型#_1、基元类型","13":"/blog/codeBook/CLR/3-基元类型、引用类型和值类型#_2、引用类型和值类型","14":"/blog/codeBook/CLR/4-类型与成员基础#_4-类型与成员基础","15":"/blog/codeBook/CLR/4-类型与成员基础#_1、静态类-不能实例化的类","16":"/blog/codeBook/CLR/4-类型与成员基础#_2、部分类、结构和接口","17":"/blog/codeBook/CLR/4-类型与成员基础#_3、虚方法、抽象方法、接口","18":"/blog/codeBook/CLR/5-参数#_5-参数","19":"/blog/codeBook/CLR/5-参数#ref和out关键字","20":"/blog/codeBook/CLR/6-属性#_6-属性","21":"/blog/codeBook/CLR/6-属性#属性与字段","22":"/blog/codeBook/CSharp/IEnumerable与IQueryable#ienumerable与iqueryable","23":"/blog/codeBook/CSharp/LINQ#linq","24":"/blog/codeBook/CSharp/LINQ#from子句","25":"/blog/codeBook/CSharp/LINQ#where子句","26":"/blog/codeBook/CSharp/LINQ#select子句","27":"/blog/codeBook/CSharp/LINQ#group子句","28":"/blog/codeBook/CSharp/LINQ#into","29":"/blog/codeBook/CSharp/LINQ#orderby子句","30":"/blog/codeBook/CSharp/LINQ#join-联接","31":"/blog/codeBook/CSharp/LINQ#let子句","32":"/blog/codeBook/CSharp/Nunit单元测试#nunit单元测试","33":"/blog/codeBook/CSharp/Nunit单元测试#创建一个类","34":"/blog/codeBook/CSharp/Nunit单元测试#编写单元测试代码","35":"/blog/codeBook/CSharp/Record#record","36":"/blog/codeBook/CSharp/Record#class、struct与record的区别","37":"/blog/codeBook/CSharp/Record#class","38":"/blog/codeBook/CSharp/Record#struct","39":"/blog/codeBook/CSharp/Record#record-1","40":"/blog/codeBook/CSharp/Record#使用场景","41":"/blog/codeBook/CSharp/值类型和引用类型#c-中的值类型和引用类型","42":"/blog/codeBook/CSharp/值类型和引用类型#现实世界中的值和引用","43":"/blog/codeBook/CSharp/值类型和引用类型#值类型和引用类型基础知识","44":"/blog/codeBook/CSharp/值类型和引用类型#装箱和拆箱","45":"/blog/codeBook/CSharp/委托#委托","46":"/blog/codeBook/CSharp/委托#什么是委托","47":"/blog/codeBook/CSharp/委托#简单委托的构成","48":"/blog/codeBook/CSharp/委托#何时使用委托而不是接口","49":"/blog/codeBook/CSharp/接口#接口","50":"/blog/codeBook/CSharp/模式匹配#模式匹配","51":"/blog/codeBook/CSharp/模式匹配#简单模式","52":"/blog/codeBook/CSharp/模式匹配#关系模式","53":"/blog/codeBook/CSharp/模式匹配#逻辑模式","54":"/blog/codeBook/设计模式/创建型模式——builder模式#创建型模式——builder模式","55":"/blog/codeBook/设计模式/创建型模式——builder模式#概要","56":"/blog/codeBook/设计模式/创建型模式——builder模式#使用场景","57":"/blog/codeBook/设计模式/创建型模式——builder模式#有优缺点","58":"/blog/codeBook/设计模式/创建型模式——builder模式#代码示例","59":"/blog/codeBook/设计模式/创建型模式——单例模式#创建型模式——单例模式","60":"/blog/codeBook/设计模式/创建型模式——单例模式#使用场景","61":"/blog/codeBook/设计模式/创建型模式——单例模式#优点和缺点","62":"/blog/codeBook/设计模式/创建型模式——单例模式#代码示例","63":"/blog/codeBook/设计模式/创建型模式——原型对象#创建型模式——原型对象","64":"/blog/codeBook/设计模式/创建型模式——原型对象#原型模式-prototype-pattern","65":"/blog/codeBook/设计模式/创建型模式——原型对象#使用场景","66":"/blog/codeBook/设计模式/创建型模式——原型对象#优点和缺点","67":"/blog/codeBook/设计模式/创建型模式——原型对象#代码示例","68":"/blog/codeBook/设计模式/创建型模式——工厂方法#创建型模式——工厂方法","69":"/blog/codeBook/设计模式/创建型模式——工厂方法#概要","70":"/blog/codeBook/设计模式/创建型模式——工厂方法#使用场景","71":"/blog/codeBook/设计模式/创建型模式——工厂方法#有优缺点","72":"/blog/codeBook/设计模式/创建型模式——工厂方法#代码示例","73":"/blog/codeBook/设计模式/创建型模式——抽象工厂#创建型模式——抽象工厂","74":"/blog/codeBook/设计模式/创建型模式——抽象工厂#概要","75":"/blog/codeBook/设计模式/创建型模式——抽象工厂#使用场景","76":"/blog/codeBook/设计模式/创建型模式——抽象工厂#有优缺点","77":"/blog/codeBook/设计模式/创建型模式——抽象工厂#代码示例","78":"/blog/codeBook/设计模式/结构型模式——外观模式#外观模式——简化复杂系统","79":"/blog/codeBook/设计模式/结构型模式——外观模式#使用场景","80":"/blog/codeBook/设计模式/结构型模式——外观模式#优点和缺点","81":"/blog/codeBook/设计模式/结构型模式——外观模式#代码示例","82":"/blog/codeBook/设计模式/结构型模式——桥接模式#结构型模式——桥接模式","83":"/blog/codeBook/设计模式/结构型模式——桥接模式#使用场景","84":"/blog/codeBook/设计模式/结构型模式——桥接模式#优点和缺点","85":"/blog/codeBook/设计模式/结构型模式——桥接模式#代码示例","86":"/blog/codeBook/设计模式/结构型模式——组合模式#结构型模式——组合模式","87":"/blog/codeBook/设计模式/结构型模式——组合模式#使用场景","88":"/blog/codeBook/设计模式/结构型模式——组合模式#优点和缺点","89":"/blog/codeBook/设计模式/结构型模式——组合模式#代码示例","90":"/blog/codeBook/设计模式/结构型模式——装饰器模式#结构型模式——装饰器模式","91":"/blog/codeBook/设计模式/结构型模式——装饰器模式#使用场景","92":"/blog/codeBook/设计模式/结构型模式——装饰器模式#优点和缺点","93":"/blog/codeBook/设计模式/结构型模式——装饰器模式#代码示例","94":"/blog/codeBook/设计模式/结构型模式——适配器模式#结构型模式——适配器模式","95":"/blog/codeBook/设计模式/结构型模式——适配器模式#使用场景","96":"/blog/codeBook/设计模式/结构型模式——适配器模式#优点和缺点","97":"/blog/codeBook/设计模式/结构型模式——适配器模式#代码示例","98":"/blog/codeBook/重构/第七章 重新组织数据#第七章-重新组织数据","99":"/blog/codeBook/重构/第七章 重新组织数据#自封装值域","100":"/blog/codeBook/重构/第七章 重新组织数据#以对象取代数据值","101":"/blog/codeBook/重构/第七章 重新组织数据#将实值对象改为引用对象","102":"/blog/codeBook/重构/第七章 重新组织数据#将引用对象改为实值对象","103":"/blog/codeBook/重构/第七章 重新组织数据#以对象取代数组","104":"/blog/codeBook/重构/第七章 重新组织数据#复制「被监视的数据」","105":"/blog/codeBook/重构/第七章 重新组织数据#将单向关联改为双向","106":"/blog/codeBook/重构/第七章 重新组织数据#将双向关联改为单向","107":"/blog/codeBook/重构/第七章 重新组织数据#以符号常量-字面常量取代魔法数","108":"/blog/codeBook/重构/第七章 重新组织数据#封装值域","109":"/blog/codeBook/重构/第七章 重新组织数据#封装群集","110":"/blog/codeBook/重构/第七章 重新组织数据#以类取代型别码","111":"/blog/codeBook/重构/第七章 重新组织数据#以子类取代型别码","112":"/blog/codeBook/重构/第七章 重新组织数据#以state-strategy-取代型别码","113":"/blog/codeBook/重构/第七章 重新组织数据#以值域取代子类","114":"/blog/codeBook/重构/第三章 代码的坏味道#第三章-代码的坏味道","115":"/blog/codeBook/重构/第三章 代码的坏味道#重复的代码","116":"/blog/codeBook/重构/第三章 代码的坏味道#过长的函数","117":"/blog/codeBook/重构/第三章 代码的坏味道#过大类-单一类具有太多职责","118":"/blog/codeBook/重构/第三章 代码的坏味道#过长参数列","119":"/blog/codeBook/重构/第三章 代码的坏味道#发散式变化","120":"/blog/codeBook/重构/第三章 代码的坏味道#散弹式修改","121":"/blog/codeBook/重构/第三章 代码的坏味道#依恋情结","122":"/blog/codeBook/重构/第三章 代码的坏味道#数据泥团","123":"/blog/codeBook/重构/第三章 代码的坏味道#基本型别偏执","124":"/blog/codeBook/重构/第三章 代码的坏味道#switch惊悚现身","125":"/blog/codeBook/重构/第三章 代码的坏味道#平行继承体系","126":"/blog/codeBook/重构/第三章 代码的坏味道#冗余类","127":"/blog/codeBook/重构/第三章 代码的坏味道#夸夸其谈未来性","128":"/blog/codeBook/重构/第三章 代码的坏味道#令人迷惑的暂时值域","129":"/blog/codeBook/重构/第三章 代码的坏味道#过度耦合的消息链","130":"/blog/codeBook/重构/第三章 代码的坏味道#中间转手人","131":"/blog/codeBook/重构/第三章 代码的坏味道#狎昵关系","132":"/blog/codeBook/重构/第三章 代码的坏味道#异曲同工的类","133":"/blog/codeBook/重构/第三章 代码的坏味道#不完美的程序库类","134":"/blog/codeBook/重构/第三章 代码的坏味道#纯稚的数据类","135":"/blog/codeBook/重构/第三章 代码的坏味道#被拒绝的遗赠","136":"/blog/codeBook/重构/第三章 代码的坏味道#过多的注释","137":"/blog/codeBook/重构/第九章 简化函数调用#第九章-简化函数调用","138":"/blog/codeBook/重构/第九章 简化函数调用#重新命名函数","139":"/blog/codeBook/重构/第九章 简化函数调用#添加参数","140":"/blog/codeBook/重构/第九章 简化函数调用#移除参数","141":"/blog/codeBook/重构/第九章 简化函数调用#将查询函数和修改函数分离","142":"/blog/codeBook/重构/第九章 简化函数调用#令函数携带参数","143":"/blog/codeBook/重构/第九章 简化函数调用#以明确的函数取代参数","144":"/blog/codeBook/重构/第九章 简化函数调用#保持对象完整","145":"/blog/codeBook/重构/第九章 简化函数调用#以函数取代参数","146":"/blog/codeBook/重构/第九章 简化函数调用#引入参数对象","147":"/blog/codeBook/重构/第九章 简化函数调用#移除设置函数","148":"/blog/codeBook/重构/第九章 简化函数调用#隐藏某个函数","149":"/blog/codeBook/重构/第九章 简化函数调用#以「工厂函数」取代「构造函数」","150":"/blog/codeBook/重构/第九章 简化函数调用#封装「向下转型」动作","151":"/blog/codeBook/重构/第九章 简化函数调用#用异常取代错误码","152":"/blog/codeBook/重构/第九章 简化函数调用#以测试取代异常","153":"/blog/codeBook/重构/第二章 重构原则#第二章-重构原则","154":"/blog/codeBook/重构/第二章 重构原则#何谓重构","155":"/blog/codeBook/重构/第二章 重构原则#为何重构","156":"/blog/codeBook/重构/第二章 重构原则#何时重构","157":"/blog/codeBook/重构/第二章 重构原则#三次法则","158":"/blog/codeBook/重构/第二章 重构原则#重构目标","159":"/blog/codeBook/重构/第二章 重构原则#何时不该重构","160":"/blog/codeBook/重构/第二章 重构原则#重构与设计","161":"/blog/codeBook/重构/第五章 重新组织你的函数#第五章-重新组织你的函数","162":"/blog/codeBook/重构/第五章 重新组织你的函数#提炼函数","163":"/blog/codeBook/重构/第五章 重新组织你的函数#函数内联化","164":"/blog/codeBook/重构/第五章 重新组织你的函数#临时变量内联化","165":"/blog/codeBook/重构/第五章 重新组织你的函数#以查询取代临时变量","166":"/blog/codeBook/重构/第五章 重新组织你的函数#引入解释性变量","167":"/blog/codeBook/重构/第五章 重新组织你的函数#分解临时变量","168":"/blog/codeBook/重构/第五章 重新组织你的函数#移除对参数的赋值动作","169":"/blog/codeBook/重构/第五章 重新组织你的函数#以函数对象取代函数","170":"/blog/codeBook/重构/第五章 重新组织你的函数#替换你的算法","171":"/blog/codeBook/重构/第八章 简化条件表达式#第八章-简化条件表达式","172":"/blog/codeBook/重构/第八章 简化条件表达式#分解条件式","173":"/blog/codeBook/重构/第八章 简化条件表达式#合并条件式","174":"/blog/codeBook/重构/第八章 简化条件表达式#合并重复的条件片段","175":"/blog/codeBook/重构/第八章 简化条件表达式#移除控制标记","176":"/blog/codeBook/重构/第八章 简化条件表达式#以卫语句取代嵌套条件式","177":"/blog/codeBook/重构/第八章 简化条件表达式#以多态取代条件式","178":"/blog/codeBook/重构/第八章 简化条件表达式#引入null对象","179":"/blog/codeBook/重构/第八章 简化条件表达式#引入断言","180":"/blog/codeBook/重构/第六章 在对象之间搬移特性#第六章-在对象之间搬移特性","181":"/blog/codeBook/重构/第六章 在对象之间搬移特性#搬移函数","182":"/blog/codeBook/重构/第六章 在对象之间搬移特性#搬移值域","183":"/blog/codeBook/重构/第六章 在对象之间搬移特性#提炼类","184":"/blog/codeBook/重构/第六章 在对象之间搬移特性#将类内联化","185":"/blog/codeBook/重构/第六章 在对象之间搬移特性#隐藏「委托关系」","186":"/blog/codeBook/重构/第六章 在对象之间搬移特性#移除中间人","187":"/blog/codeBook/重构/第六章 在对象之间搬移特性#引入外加函数","188":"/blog/codeBook/重构/第六章 在对象之间搬移特性#引入本地扩展","189":"/blog/codeBook/重构/第十一章 大型重构#第十一章-大型重构","190":"/blog/codeBook/重构/第十一章 大型重构#梳理并分解继承体系","191":"/blog/codeBook/重构/第十一章 大型重构#将过程化设计转化为对象设计","192":"/blog/codeBook/重构/第十一章 大型重构#将领域和表述-显示分离","193":"/blog/codeBook/重构/第十一章 大型重构#提炼继承体系","194":"/blog/codeBook/重构/第十章 处理概括关系#第十章-处理概括关系","195":"/blog/codeBook/重构/第十章 处理概括关系#值域上移","196":"/blog/codeBook/重构/第十章 处理概括关系#函数上移","197":"/blog/codeBook/重构/第十章 处理概括关系#构造函数本体上移","198":"/blog/codeBook/重构/第十章 处理概括关系#函数下移","199":"/blog/codeBook/重构/第十章 处理概括关系#值域下移","200":"/blog/codeBook/重构/第十章 处理概括关系#提炼子类","201":"/blog/codeBook/重构/第十章 处理概括关系#提炼超类","202":"/blog/codeBook/重构/第十章 处理概括关系#提炼接口","203":"/blog/codeBook/重构/第十章 处理概括关系#折叠继承关系","204":"/blog/codeBook/重构/第十章 处理概括关系#塑造模版函数","205":"/blog/codeBook/重构/第十章 处理概括关系#以委托取代继承","206":"/blog/codeBook/重构/第十章 处理概括关系#以继承取代委托","207":"/blog/codeBook/重构/第四章 构筑测试体系#第四章-构筑测试体系","208":"/blog/codeBook/重构/第四章 构筑测试体系#自我测试代码的价值","209":"/blog/codeBook/重构/第四章 构筑测试体系#c-中的单元测试"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[2,1,1],"1":[7,2,69],"2":[2,1,1],"3":[6,2,1],"4":[2,2,1],"5":[7,4,7],"6":[2,2,3],"7":[2,1,1],"8":[3,2,24],"9":[2,2,11],"10":[2,2,2],"11":[3,1,1],"12":[2,3,7],"13":[2,3,56],"14":[2,1,1],"15":[3,2,5],"16":[4,2,6],"17":[4,2,34],"18":[2,1,1],"19":[1,2,29],"20":[2,1,1],"21":[1,2,35],"22":[1,1,119],"23":[1,1,7],"24":[1,2,9],"25":[1,2,12],"26":[1,2,10],"27":[1,2,18],"28":[1,2,17],"29":[1,2,14],"30":[2,2,31],"31":[1,2,10],"32":[1,1,1],"33":[1,1,34],"34":[1,1,60],"35":[1,1,1],"36":[2,1,1],"37":[1,3,8],"38":[1,3,7],"39":[1,3,9],"40":[2,3,13],"41":[2,1,4],"42":[1,2,46],"43":[1,2,47],"44":[1,2,40],"45":[1,1,2],"46":[2,2,15],"47":[1,2,27],"48":[2,1,16],"49":[1,1,24],"50":[1,1,17],"51":[1,1,15],"52":[1,1,22],"53":[1,1,24],"54":[2,1,1],"55":[1,2,7],"56":[1,3,3],"57":[1,3,11],"58":[1,2,46],"59":[2,1,8],"60":[1,2,6],"61":[1,2,13],"62":[1,2,53],"63":[2,1,1],"64":[4,1,6],"65":[1,4,5],"66":[1,4,9],"67":[1,4,50],"68":[2,1,1],"69":[1,2,8],"70":[1,3,5],"71":[1,3,14],"72":[1,2,30],"73":[2,1,1],"74":[1,2,9],"75":[1,3,7],"76":[1,3,6],"77":[1,2,27],"78":[2,1,10],"79":[1,2,6],"80":[1,2,11],"81":[1,2,58],"82":[2,1,10],"83":[1,2,5],"84":[1,2,11],"85":[1,2,70],"86":[2,1,11],"87":[1,2,7],"88":[1,2,11],"89":[1,2,89],"90":[2,1,10],"91":[1,2,7],"92":[1,2,12],"93":[1,2,82],"94":[2,1,7],"95":[1,2,5],"96":[1,2,10],"97":[1,2,56],"98":[2,1,1],"99":[1,2,22],"100":[1,2,1],"101":[1,2,4],"102":[1,2,5],"103":[1,2,19],"104":[3,2,2],"105":[1,2,6],"106":[1,2,3],"107":[2,2,17],"108":[1,2,17],"109":[1,2,1],"110":[1,2,1],"111":[1,2,1],"112":[3,2,40],"113":[1,2,4],"114":[2,1,1],"115":[1,2,3],"116":[1,2,15],"117":[2,2,3],"118":[1,2,10],"119":[1,2,4],"120":[1,2,5],"121":[1,2,4],"122":[1,2,5],"123":[1,2,21],"124":[1,2,16],"125":[1,2,5],"126":[1,2,5],"127":[1,2,3],"128":[1,2,4],"129":[1,2,4],"130":[1,2,10],"131":[1,2,4],"132":[1,2,3],"133":[1,2,12],"134":[1,2,4],"135":[1,2,9],"136":[1,2,3],"137":[2,1,1],"138":[1,2,2],"139":[1,2,2],"140":[1,2,2],"141":[1,2,8],"142":[1,2,5],"143":[1,2,26],"144":[1,2,19],"145":[1,2,16],"146":[1,2,3],"147":[1,2,19],"148":[1,2,3],"149":[5,2,33],"150":[3,2,18],"151":[1,2,21],"152":[1,2,25],"153":[2,1,1],"154":[1,2,6],"155":[1,2,9],"156":[1,2,1],"157":[1,3,10],"158":[1,3,2],"159":[1,2,11],"160":[1,2,8],"161":[2,1,1],"162":[1,2,19],"163":[1,2,14],"164":[1,2,14],"165":[1,2,20],"166":[1,2,27],"167":[1,2,20],"168":[1,2,15],"169":[1,2,12],"170":[1,2,30],"171":[2,1,1],"172":[1,2,24],"173":[1,2,22],"174":[1,2,15],"175":[1,2,29],"176":[1,2,19],"177":[1,2,26],"178":[1,2,16],"179":[1,2,34],"180":[2,1,1],"181":[1,2,33],"182":[1,2,27],"183":[1,2,3],"184":[1,2,3],"185":[3,2,3],"186":[1,2,19],"187":[1,2,28],"188":[1,2,1],"189":[2,1,1],"190":[1,2,4],"191":[1,2,1],"192":[2,2,3],"193":[1,2,9],"194":[2,1,1],"195":[1,2,3],"196":[1,2,3],"197":[1,2,20],"198":[1,2,3],"199":[1,2,3],"200":[1,2,4],"201":[1,2,4],"202":[1,2,3],"203":[1,2,2],"204":[1,2,7],"205":[1,2,26],"206":[1,2,7],"207":[2,1,1],"208":[1,2,6],"209":[2,2,2]},"averageFieldLength":[1.4095238095238096,1.9,13.947619047619042],"storedFields":{"0":{"title":"About me","titles":[]},"1":{"title":"Hi there, I'm Chen Tao! 👋","titles":["About me"]},"2":{"title":"1-CLR基础","titles":[]},"3":{"title":"1、CLR的核心功能：内存管理、程序集加载、安全性、异常处理和线程同步","titles":["1-CLR基础"]},"4":{"title":"2、编译源代码过程","titles":["1-CLR基础"]},"5":{"title":"3、源代码文件 -&gt; 编译器 -&gt; 托管模块（IL代码和元数据）","titles":["1-CLR基础","2、编译源代码过程"]},"6":{"title":"4、将托管模块合并成程序集","titles":["1-CLR基础"]},"7":{"title":"2-类型基础","titles":[]},"8":{"title":"1、所有类型都从System.Object派生","titles":["2-类型基础"]},"9":{"title":"2、类型转换","titles":["2-类型基础"]},"10":{"title":"3、运行时的相互关系","titles":["2-类型基础"]},"11":{"title":"3-基元类型、引用类型和值类型","titles":[]},"12":{"title":"1、基元类型","titles":["3-基元类型、引用类型和值类型"]},"13":{"title":"2、引用类型和值类型","titles":["3-基元类型、引用类型和值类型"]},"14":{"title":"4-类型与成员基础","titles":[]},"15":{"title":"1、静态类：不能实例化的类","titles":["4-类型与成员基础"]},"16":{"title":"2、部分类、结构和接口：","titles":["4-类型与成员基础"]},"17":{"title":"3、虚方法、抽象方法、接口","titles":["4-类型与成员基础"]},"18":{"title":"5-参数","titles":[]},"19":{"title":"ref和out关键字","titles":["5-参数"]},"20":{"title":"6-属性","titles":[]},"21":{"title":"属性与字段","titles":["6-属性"]},"22":{"title":"IEnumerable与IQueryable","titles":[]},"23":{"title":"LINQ","titles":[]},"24":{"title":"from子句","titles":["LINQ",null]},"25":{"title":"where子句","titles":["LINQ",null]},"26":{"title":"select子句","titles":["LINQ",null]},"27":{"title":"group子句","titles":["LINQ",null]},"28":{"title":"into","titles":["LINQ",null]},"29":{"title":"orderby子句","titles":["LINQ",null]},"30":{"title":"join 联接","titles":["LINQ",null]},"31":{"title":"let子句","titles":["LINQ",null]},"32":{"title":"Nunit单元测试","titles":[]},"33":{"title":"创建一个类","titles":["Nunit单元测试"]},"34":{"title":"编写单元测试代码","titles":["Nunit单元测试"]},"35":{"title":"Record","titles":[]},"36":{"title":"class、struct与record的区别","titles":["Record"]},"37":{"title":"class","titles":["Record","class、struct与record的区别"]},"38":{"title":"struct","titles":["Record","class、struct与record的区别"]},"39":{"title":"record","titles":["Record","class、struct与record的区别"]},"40":{"title":"使用场景：","titles":["Record","class、struct与record的区别"]},"41":{"title":"C#中的值类型和引用类型","titles":[]},"42":{"title":"现实世界中的值和引用","titles":["C#中的值类型和引用类型"]},"43":{"title":"值类型和引用类型基础知识","titles":["C#中的值类型和引用类型"]},"44":{"title":"装箱和拆箱","titles":["C#中的值类型和引用类型"]},"45":{"title":"委托","titles":[]},"46":{"title":"什么是委托？","titles":["委托",null]},"47":{"title":"简单委托的构成","titles":["委托",null]},"48":{"title":"何时使用委托而不是接口？","titles":["委托"]},"49":{"title":"接口","titles":[]},"50":{"title":"模式匹配","titles":[]},"51":{"title":"简单模式","titles":["模式匹配"]},"52":{"title":"关系模式","titles":["模式匹配"]},"53":{"title":"逻辑模式","titles":["模式匹配"]},"54":{"title":"创建型模式——builder模式","titles":[]},"55":{"title":"概要","titles":["创建型模式——builder模式"]},"56":{"title":"使用场景","titles":["创建型模式——builder模式","概要"]},"57":{"title":"有优缺点","titles":["创建型模式——builder模式","概要"]},"58":{"title":"代码示例","titles":["创建型模式——builder模式"]},"59":{"title":"创建型模式——单例模式","titles":[]},"60":{"title":"使用场景","titles":["创建型模式——单例模式"]},"61":{"title":"优点和缺点","titles":["创建型模式——单例模式"]},"62":{"title":"代码示例","titles":["创建型模式——单例模式"]},"63":{"title":"创建型模式——原型对象","titles":[]},"64":{"title":"原型模式（Prototype Pattern）","titles":[]},"65":{"title":"使用场景","titles":["原型模式（Prototype Pattern）"]},"66":{"title":"优点和缺点","titles":["原型模式（Prototype Pattern）"]},"67":{"title":"代码示例","titles":["原型模式（Prototype Pattern）"]},"68":{"title":"创建型模式——工厂方法","titles":[]},"69":{"title":"概要","titles":["创建型模式——工厂方法"]},"70":{"title":"使用场景","titles":["创建型模式——工厂方法","概要"]},"71":{"title":"有优缺点","titles":["创建型模式——工厂方法","概要"]},"72":{"title":"代码示例","titles":["创建型模式——工厂方法"]},"73":{"title":"创建型模式——抽象工厂","titles":[]},"74":{"title":"概要","titles":["创建型模式——抽象工厂"]},"75":{"title":"使用场景","titles":["创建型模式——抽象工厂","概要"]},"76":{"title":"有优缺点","titles":["创建型模式——抽象工厂","概要"]},"77":{"title":"代码示例","titles":["创建型模式——抽象工厂"]},"78":{"title":"外观模式——简化复杂系统","titles":[]},"79":{"title":"使用场景","titles":["外观模式——简化复杂系统"]},"80":{"title":"优点和缺点","titles":["外观模式——简化复杂系统"]},"81":{"title":"代码示例","titles":["外观模式——简化复杂系统"]},"82":{"title":"结构型模式——桥接模式","titles":[]},"83":{"title":"使用场景","titles":["结构型模式——桥接模式"]},"84":{"title":"优点和缺点","titles":["结构型模式——桥接模式"]},"85":{"title":"代码示例","titles":["结构型模式——桥接模式"]},"86":{"title":"结构型模式——组合模式","titles":[]},"87":{"title":"使用场景","titles":["结构型模式——组合模式"]},"88":{"title":"优点和缺点","titles":["结构型模式——组合模式"]},"89":{"title":"代码示例","titles":["结构型模式——组合模式"]},"90":{"title":"结构型模式——装饰器模式","titles":[]},"91":{"title":"使用场景","titles":["结构型模式——装饰器模式"]},"92":{"title":"优点和缺点","titles":["结构型模式——装饰器模式"]},"93":{"title":"代码示例","titles":["结构型模式——装饰器模式"]},"94":{"title":"结构型模式——适配器模式","titles":[]},"95":{"title":"使用场景","titles":["结构型模式——适配器模式"]},"96":{"title":"优点和缺点","titles":["结构型模式——适配器模式"]},"97":{"title":"代码示例","titles":["结构型模式——适配器模式"]},"98":{"title":"第七章 重新组织数据","titles":[]},"99":{"title":"自封装值域","titles":["第七章 重新组织数据"]},"100":{"title":"以对象取代数据值","titles":["第七章 重新组织数据"]},"101":{"title":"将实值对象改为引用对象","titles":["第七章 重新组织数据"]},"102":{"title":"将引用对象改为实值对象","titles":["第七章 重新组织数据"]},"103":{"title":"以对象取代数组","titles":["第七章 重新组织数据"]},"104":{"title":"复制「被监视的数据」","titles":["第七章 重新组织数据"]},"105":{"title":"将单向关联改为双向","titles":["第七章 重新组织数据"]},"106":{"title":"将双向关联改为单向","titles":["第七章 重新组织数据"]},"107":{"title":"以符号常量/字面常量取代魔法数","titles":["第七章 重新组织数据"]},"108":{"title":"封装值域","titles":["第七章 重新组织数据"]},"109":{"title":"封装群集","titles":["第七章 重新组织数据"]},"110":{"title":"以类取代型别码","titles":["第七章 重新组织数据"]},"111":{"title":"以子类取代型别码","titles":["第七章 重新组织数据"]},"112":{"title":"以State/Strategy 取代型别码","titles":["第七章 重新组织数据"]},"113":{"title":"以值域取代子类","titles":["第七章 重新组织数据"]},"114":{"title":"第三章 代码的坏味道","titles":[]},"115":{"title":"重复的代码","titles":["第三章 代码的坏味道"]},"116":{"title":"过长的函数","titles":["第三章 代码的坏味道"]},"117":{"title":"过大类：单一类具有太多职责","titles":["第三章 代码的坏味道"]},"118":{"title":"过长参数列","titles":["第三章 代码的坏味道"]},"119":{"title":"发散式变化","titles":["第三章 代码的坏味道"]},"120":{"title":"散弹式修改","titles":["第三章 代码的坏味道"]},"121":{"title":"依恋情结","titles":["第三章 代码的坏味道"]},"122":{"title":"数据泥团","titles":["第三章 代码的坏味道"]},"123":{"title":"基本型别偏执","titles":["第三章 代码的坏味道"]},"124":{"title":"switch惊悚现身","titles":["第三章 代码的坏味道"]},"125":{"title":"平行继承体系","titles":["第三章 代码的坏味道"]},"126":{"title":"冗余类","titles":["第三章 代码的坏味道"]},"127":{"title":"夸夸其谈未来性","titles":["第三章 代码的坏味道"]},"128":{"title":"令人迷惑的暂时值域","titles":["第三章 代码的坏味道"]},"129":{"title":"过度耦合的消息链","titles":["第三章 代码的坏味道"]},"130":{"title":"中间转手人","titles":["第三章 代码的坏味道"]},"131":{"title":"狎昵关系","titles":["第三章 代码的坏味道"]},"132":{"title":"异曲同工的类","titles":["第三章 代码的坏味道"]},"133":{"title":"不完美的程序库类","titles":["第三章 代码的坏味道"]},"134":{"title":"纯稚的数据类","titles":["第三章 代码的坏味道"]},"135":{"title":"被拒绝的遗赠","titles":["第三章 代码的坏味道"]},"136":{"title":"过多的注释","titles":["第三章 代码的坏味道"]},"137":{"title":"第九章 简化函数调用","titles":[]},"138":{"title":"重新命名函数","titles":["第九章 简化函数调用"]},"139":{"title":"添加参数","titles":["第九章 简化函数调用"]},"140":{"title":"移除参数","titles":["第九章 简化函数调用"]},"141":{"title":"将查询函数和修改函数分离","titles":["第九章 简化函数调用"]},"142":{"title":"令函数携带参数","titles":["第九章 简化函数调用"]},"143":{"title":"以明确的函数取代参数","titles":["第九章 简化函数调用"]},"144":{"title":"保持对象完整","titles":["第九章 简化函数调用"]},"145":{"title":"以函数取代参数","titles":["第九章 简化函数调用"]},"146":{"title":"引入参数对象","titles":["第九章 简化函数调用"]},"147":{"title":"移除设置函数","titles":["第九章 简化函数调用"]},"148":{"title":"隐藏某个函数","titles":["第九章 简化函数调用"]},"149":{"title":"以「工厂函数」取代「构造函数」","titles":["第九章 简化函数调用"]},"150":{"title":"封装「向下转型」动作","titles":["第九章 简化函数调用"]},"151":{"title":"用异常取代错误码","titles":["第九章 简化函数调用"]},"152":{"title":"以测试取代异常","titles":["第九章 简化函数调用"]},"153":{"title":"第二章 重构原则","titles":[]},"154":{"title":"何谓重构","titles":["第二章 重构原则"]},"155":{"title":"为何重构","titles":["第二章 重构原则"]},"156":{"title":"何时重构","titles":["第二章 重构原则"]},"157":{"title":"三次法则","titles":["第二章 重构原则","何时重构"]},"158":{"title":"重构目标","titles":["第二章 重构原则","何时重构"]},"159":{"title":"何时不该重构","titles":["第二章 重构原则"]},"160":{"title":"重构与设计","titles":["第二章 重构原则"]},"161":{"title":"第五章 重新组织你的函数","titles":[]},"162":{"title":"提炼函数","titles":["第五章 重新组织你的函数"]},"163":{"title":"函数内联化","titles":["第五章 重新组织你的函数"]},"164":{"title":"临时变量内联化","titles":["第五章 重新组织你的函数"]},"165":{"title":"以查询取代临时变量","titles":["第五章 重新组织你的函数"]},"166":{"title":"引入解释性变量","titles":["第五章 重新组织你的函数"]},"167":{"title":"分解临时变量","titles":["第五章 重新组织你的函数"]},"168":{"title":"移除对参数的赋值动作","titles":["第五章 重新组织你的函数"]},"169":{"title":"以函数对象取代函数","titles":["第五章 重新组织你的函数"]},"170":{"title":"替换你的算法","titles":["第五章 重新组织你的函数"]},"171":{"title":"第八章 简化条件表达式","titles":[]},"172":{"title":"分解条件式","titles":["第八章 简化条件表达式"]},"173":{"title":"合并条件式","titles":["第八章 简化条件表达式"]},"174":{"title":"合并重复的条件片段","titles":["第八章 简化条件表达式"]},"175":{"title":"移除控制标记","titles":["第八章 简化条件表达式"]},"176":{"title":"以卫语句取代嵌套条件式","titles":["第八章 简化条件表达式"]},"177":{"title":"以多态取代条件式","titles":["第八章 简化条件表达式"]},"178":{"title":"引入null对象","titles":["第八章 简化条件表达式"]},"179":{"title":"引入断言","titles":["第八章 简化条件表达式"]},"180":{"title":"第六章 在对象之间搬移特性","titles":[]},"181":{"title":"搬移函数","titles":["第六章 在对象之间搬移特性"]},"182":{"title":"搬移值域","titles":["第六章 在对象之间搬移特性"]},"183":{"title":"提炼类","titles":["第六章 在对象之间搬移特性"]},"184":{"title":"将类内联化","titles":["第六章 在对象之间搬移特性"]},"185":{"title":"隐藏「委托关系」","titles":["第六章 在对象之间搬移特性"]},"186":{"title":"移除中间人","titles":["第六章 在对象之间搬移特性"]},"187":{"title":"引入外加函数","titles":["第六章 在对象之间搬移特性"]},"188":{"title":"引入本地扩展","titles":["第六章 在对象之间搬移特性"]},"189":{"title":"第十一章 大型重构","titles":[]},"190":{"title":"梳理并分解继承体系","titles":["第十一章 大型重构"]},"191":{"title":"将过程化设计转化为对象设计","titles":["第十一章 大型重构"]},"192":{"title":"将领域和表述/显示分离","titles":["第十一章 大型重构"]},"193":{"title":"提炼继承体系","titles":["第十一章 大型重构"]},"194":{"title":"第十章 处理概括关系","titles":[]},"195":{"title":"值域上移","titles":["第十章 处理概括关系"]},"196":{"title":"函数上移","titles":["第十章 处理概括关系"]},"197":{"title":"构造函数本体上移","titles":["第十章 处理概括关系"]},"198":{"title":"函数下移","titles":["第十章 处理概括关系"]},"199":{"title":"值域下移","titles":["第十章 处理概括关系"]},"200":{"title":"提炼子类","titles":["第十章 处理概括关系"]},"201":{"title":"提炼超类","titles":["第十章 处理概括关系"]},"202":{"title":"提炼接口","titles":["第十章 处理概括关系"]},"203":{"title":"折叠继承关系","titles":["第十章 处理概括关系"]},"204":{"title":"塑造模版函数","titles":["第十章 处理概括关系"]},"205":{"title":"以委托取代继承","titles":["第十章 处理概括关系"]},"206":{"title":"以继承取代委托","titles":["第十章 处理概括关系"]},"207":{"title":"第四章 构筑测试体系","titles":[]},"208":{"title":"自我测试代码的价值","titles":["第四章 构筑测试体系"]},"209":{"title":"C#中的单元测试","titles":["第四章 构筑测试体系"]}},"dirtCount":0,"index":[["撰写测试代码的最有用时机就是在开始编程之前",{"2":{"208":1}}],["能大大缩减查找bug的时间",{"2":{"208":1}}],["能用iqueryable的地方就不要使用ienumerable",{"2":{"22":1}}],["让它们检查自己的测试结果",{"2":{"208":1}}],["让客户直接调用delegate",{"2":{"186":1}}],["确保所有测试都完全自动化",{"2":{"208":1}}],["构筑测试体系",{"0":{"207":1},"1":{"208":1,"209":1}}],["构造函数本体上移",{"0":{"197":1}}],["构造函数",{"0":{"149":1}}],["之间使用委托关系",{"2":{"206":1}}],["之外",{"2":{"179":1}}],["无论何时",{"2":{"204":1}}],["继承是避免重复行为的强大工具",{"2":{"204":1}}],["塑造模版函数",{"0":{"204":1}}],["超类和子类之间并无太大区别",{"2":{"203":1}}],["超类中某个值域只与部分子类有关",{"2":{"199":1}}],["超类中某个函数只与部分子类有关",{"2":{"198":1}}],["折叠继承关系",{"0":{"203":1}}],["若干客户使用class接口中的同一个子集",{"2":{"202":1}}],["若干个函数做了类似的工作",{"2":{"142":1}}],["新建一个子类",{"2":{"200":1}}],["处理概括关系",{"0":{"194":1},"1":{"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1}}],["表示一种特殊情况",{"2":{"193":1}}],["表达式",{"2":{"43":1}}],["工作",{"2":{"193":1}}],["工厂函数",{"0":{"149":1}}],["工厂模式",{"2":{"69":1}}],["工厂方法",{"0":{"68":1},"1":{"69":1,"70":1,"71":1,"72":1}}],["做了太多",{"2":{"193":1}}],["梳理并分解继承体系",{"0":{"190":1}}],["大型重构",{"0":{"189":1},"1":{"190":1,"191":1,"192":1,"193":1}}],["大量数据基于值类型比较和复制的场景",{"2":{"40":1}}],["搬移值域",{"0":{"182":1}}],["搬移函数",{"0":{"181":1}}],["85",{"2":{"181":4}}],["81",{"2":{"107":4}}],["透支金计费",{"2":{"181":2}}],["译注",{"2":{"181":2}}],["等函数",{"2":{"179":1}}],["除了istrue",{"2":{"179":1}}],["除了一下总结的特殊情况",{"2":{"42":1}}],["合并重复的条件片段",{"0":{"174":1}}],["合并条件式",{"0":{"173":1}}],["||",{"2":{"172":2,"179":2}}],["kent",{"2":{"170":6}}],["替换你的算法",{"0":{"170":1}}],["yeartodate",{"2":{"168":4}}],["you",{"2":{"1":2}}],["尽可能替换成查询式",{"2":{"165":1}}],["局部变量会使代码难以被提取",{"2":{"165":1}}],["局部变量的值总是存储在栈中",{"2":{"43":1}}],["临时变量内联化",{"0":{"164":1}}],["知乎",{"2":{"160":1}}],["快速记忆23种设计模式",{"2":{"160":1}}],["设计模式",{"2":{"160":1}}],["记住",{"2":{"159":1}}],["根本无法稳定运作",{"2":{"159":1}}],["现有代码根本不能正常运作",{"2":{"159":1}}],["现实世界中的值和引用",{"0":{"42":1}}],["容易理解+所有逻辑都只在唯一地点指定+新的改动不会危及现有行为+尽可能简单表达条件逻辑",{"2":{"158":1}}],["容器组件类",{"2":{"89":2}}],["复审代码时一并重构",{"2":{"157":1}}],["复制",{"0":{"104":1}}],["修补错误时一并重构",{"2":{"157":1}}],["修改调用者",{"2":{"152":1}}],["添加get",{"2":{"182":2}}],["添加功能时一并重构",{"2":{"157":1}}],["添加参数",{"0":{"139":1}}],["三次法则",{"0":{"157":1}}],["帮助寻找bug",{"2":{"155":1}}],["改进软件设计",{"2":{"155":1}}],["改为使用传递整个对象",{"2":{"144":1}}],["程序员都不知道已有东西发生了改变",{"2":{"154":1}}],["程序集加载",{"0":{"3":1}}],["调整结构",{"2":{"154":1}}],["调用者可以预先加以检查",{"2":{"152":1}}],["调用者只关心产品的接口",{"2":{"71":1}}],["调用目标接口的方法",{"2":{"97":1}}],["调用目标接口方法",{"2":{"97":2}}],["调用装饰器对象b的操作方法",{"2":{"93":2}}],["调用单例方法",{"2":{"62":2}}],["调用",{"2":{"47":1}}],["调用类型的构造器",{"2":{"8":1}}],["何时不该重构",{"0":{"159":1}}],["何时重构",{"0":{"156":1},"1":{"157":1,"158":1}}],["何时使用委托而不是接口",{"0":{"48":1}}],["何谓重构",{"0":{"154":1}}],["面对一个",{"2":{"152":1}}],["面向对象的最明显特征就是",{"2":{"124":1}}],["面向clr编译器生成il代码",{"2":{"5":1}}],["向下转型",{"0":{"150":1},"2":{"150":2}}],["隐藏",{"0":{"185":1}}],["隐藏某个函数",{"0":{"148":1}}],["隐藏具体构建细节",{"2":{"57":1}}],["去掉该值域的所有设值函数",{"2":{"147":1}}],["某物是否为null",{"2":{"178":1}}],["某些参数总是很自然的同时出现",{"2":{"146":1}}],["某个子类只使用了超类的部分功能",{"2":{"205":1}}],["某个继承体系同时担任两个职责",{"2":{"190":1}}],["某个class做了过多的简单委托动作",{"2":{"186":1}}],["某个类没有做太多的事情",{"2":{"184":1}}],["某个函数返回的对象",{"2":{"150":1}}],["某个函数几返回对象状态值",{"2":{"141":1}}],["某个函数需要从调用端得到更多的信息",{"2":{"139":1}}],["某个实例变量仅为某种特定情况而设",{"2":{"128":1}}],["缩减参数列",{"2":{"145":1}}],["保持对象完整",{"0":{"144":1}}],["针对该参数的每一个可能值",{"2":{"143":1}}],["令函数携带参数",{"0":{"142":1}}],["令人迷惑的暂时值域",{"0":{"128":1}}],["另一个负责修改",{"2":{"141":1}}],["另一个是方便调用",{"2":{"49":1}}],["建立继承体系",{"2":{"193":1}}],["建立两个继承体系",{"2":{"190":1}}],["建立两个不同的函数",{"2":{"141":1}}],["建立一个函数",{"2":{"143":1}}],["建立单一函数",{"2":{"142":1}}],["建造者模式增加了系统的类和对象数量",{"2":{"57":1}}],["建造者模式可能会导致代码冗余",{"2":{"57":1}}],["建造者模式",{"2":{"55":1}}],["又修改对象状态",{"2":{"141":1}}],["移除中间人",{"0":{"186":1}}],["移除控制标记",{"0":{"175":1}}],["移除对参数的赋值动作",{"0":{"168":1}}],["移除设置函数",{"0":{"147":1}}],["移除参数",{"0":{"140":1}}],["移除和显示的抽象方法",{"2":{"89":1}}],["加入代码足够清晰则不需要注释",{"2":{"136":1}}],["传统方法是通过新建一个兄弟类",{"2":{"135":1}}],["传入函数",{"2":{"25":2}}],["意思是子类不想继承父类的接口和方法",{"2":{"135":1}}],["被拒绝的遗赠",{"0":{"135":1}}],["被监视的数据",{"0":{"104":1}}],["纯稚的数据类",{"0":{"134":1}}],["进行重构",{"2":{"133":1}}],["异曲同工的类",{"0":{"132":1}}],["异常处理和线程同步",{"0":{"3":1}}],["说的是两个类过于亲密",{"2":{"131":1}}],["狎昵关系",{"0":{"131":1}}],["万事必有反",{"2":{"130":1}}],["减少代码冗余",{"2":{"129":1}}],["函数下移",{"0":{"198":1}}],["函数上移",{"0":{"196":1}}],["函数名称应该帮助程序员理解其功用",{"2":{"179":1}}],["函数名字可能会不一样",{"2":{"49":1}}],["函数内联化",{"0":{"163":1}}],["函数本体不再需要某个参数",{"2":{"140":1}}],["函数的名称未能解释函数的用途",{"2":{"138":1}}],["函数",{"2":{"129":1}}],["避免一长串连续的get",{"2":{"129":1}}],["避免了重复创建对象的开销",{"2":{"61":1}}],["夸夸其谈未来性",{"0":{"127":1}}],["比如父子类之间的差别不大",{"2":{"126":1}}],["应该替换掉",{"2":{"164":1}}],["应该在对象初创时被设值",{"2":{"147":1}}],["应该让他消失",{"2":{"126":1}}],["应用对象",{"2":{"23":1}}],["冗余类",{"0":{"126":1}}],["那么就有问题",{"2":{"125":1}}],["那么需要为朋友提供什么才能让他读到这份资料呢",{"2":{"42":1}}],["平行继承体系",{"0":{"125":1}}],["来替换",{"2":{"124":1}}],["多态",{"2":{"124":1}}],["少用switch",{"2":{"124":1}}],["把这个类的所有特性搬到另一个类中",{"2":{"184":1}}],["把私有变量隐藏好",{"2":{"134":1}}],["把custom相关字段封装起来",{"2":{"123":2}}],["把数据库加载到应用程序的内存中再进行筛选的过程叫做",{"2":{"22":1}}],["订单",{"2":{"123":4}}],["基本型别偏执",{"0":{"123":1}}],["基元类型",{"0":{"11":1,"12":1},"1":{"12":1,"13":1},"2":{"12":1}}],["放进属于它们自己的对象中",{"2":{"122":1}}],["总是绑在一起出现的数据",{"2":{"122":1}}],["总之",{"2":{"22":1}}],["依恋情结",{"0":{"121":1}}],["则需要尽量避免重复",{"2":{"204":1}}],["则需要提炼",{"2":{"183":1}}],["则需要搬移值域",{"2":{"182":1}}],["则需要搬移函数",{"2":{"181":1}}],["则需要使用move",{"2":{"121":1}}],["则很容易忘记某个重要的修改",{"2":{"120":1}}],["则要求使用显示转换",{"2":{"12":1}}],["散弹式修改",{"0":{"120":1}}],["发散式变化",{"0":{"119":1}}],["取代",{"0":{"149":1}}],["取代参数",{"2":{"118":1}}],["取代型别码",{"0":{"112":1}}],["太长的参数列导致函数难以理解",{"2":{"118":1}}],["单一类具有太多职责",{"0":{"117":1}}],["单例类",{"2":{"62":2}}],["单例模式的扩展性较差",{"2":{"61":1}}],["单例模式可能会引入全局状态",{"2":{"61":1}}],["单例模式适用于以下情况",{"2":{"60":1}}],["单例模式",{"0":{"59":1},"1":{"60":1,"61":1,"62":1},"2":{"59":1}}],["过多",{"2":{"193":1}}],["过多的注释",{"0":{"136":1}}],["过度耦合的消息链",{"0":{"129":1},"2":{"130":1}}],["过长参数列",{"0":{"118":1}}],["过长的函数",{"0":{"116":1}}],["过大类",{"0":{"117":1}}],["生成新的类",{"2":{"116":1}}],["quantity",{"2":{"145":4,"165":4,"168":4,"172":8}}],["query",{"2":{"116":1}}],["quot",{"2":{"17":16,"22":8,"47":4,"58":8,"62":4,"67":8,"72":12,"81":12,"85":12,"89":32,"93":12,"97":4,"103":16,"112":4,"143":8,"149":4,"162":16,"166":16,"170":44,"175":16,"177":4}}],["重写",{"2":{"159":1}}],["重构与设计是互补的状态",{"2":{"160":1}}],["重构与设计",{"0":{"160":1}}],["重构之前",{"2":{"159":1}}],["重构目标",{"0":{"158":1}}],["重构在不改变软件之可察行为的前提下",{"2":{"154":1}}],["重构原则",{"0":{"153":1},"1":{"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1}}],["重新组织你的函数",{"0":{"161":1},"1":{"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1}}],["重新组织数据",{"0":{"98":1},"1":{"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1}}],["重新命名函数",{"0":{"138":1}}],["重复的代码",{"0":{"115":1}}],["返回常量数据",{"2":{"113":1}}],["返回false",{"2":{"9":1}}],["封装",{"0":{"150":1}}],["封装群集",{"0":{"109":1}}],["封装值域",{"0":{"108":1}}],["字面常量取代魔法数",{"0":{"107":1}}],["字段",{"2":{"21":2}}],["两个类有相似的特性",{"2":{"201":1}}],["两个类过度依赖",{"2":{"131":1}}],["两个子类拥有相同的值域",{"2":{"195":1}}],["两个classes之间有双向关联",{"2":{"106":1}}],["两种类型的另一鞥差异在于",{"2":{"43":1}}],["随着时间推移",{"2":{"105":1}}],["开发初期",{"2":{"105":1}}],["很小且不可变",{"2":{"102":1}}],["很显然",{"2":{"22":1}}],["衍生出许多相等的实体",{"2":{"101":1}}],["直接访问",{"2":{"99":1}}],["直接存放值",{"2":{"13":1}}],["间接访问",{"2":{"99":1}}],["自我测试代码的价值",{"0":{"208":1}}],["自封装值域",{"0":{"99":1}}],["自己为0",{"2":{"8":1}}],["第四章",{"0":{"207":1},"1":{"208":1,"209":1}}],["第十章",{"0":{"194":1},"1":{"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1}}],["第十一章",{"0":{"189":1},"1":{"190":1,"191":1,"192":1,"193":1}}],["第六章",{"0":{"180":1},"1":{"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1}}],["第八章",{"0":{"171":1},"1":{"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1}}],["第五章",{"0":{"161":1},"1":{"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1}}],["第二次做类似的事会产生反感",{"2":{"157":1}}],["第二章",{"0":{"153":1},"1":{"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1}}],["第一次做某件事时只管去做",{"2":{"157":1}}],["第九章",{"0":{"137":1},"1":{"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1}}],["第三次再做类似的事",{"2":{"157":1}}],["第三章",{"0":{"114":1},"1":{"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1}}],["第三行执行相反的操作就是拆箱",{"2":{"44":1}}],["第七章",{"0":{"98":1},"1":{"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1}}],["适配器类",{"2":{"97":2}}],["适配器模式可能会导致系统中类的数量增加",{"2":{"96":1}}],["适配器模式适用于以下情况",{"2":{"95":1}}],["适配器模式使得原本由于接口不兼容而不能一起工作的类可以协同工作",{"2":{"94":1}}],["适配器模式",{"0":{"94":1},"1":{"95":1,"96":1,"97":1},"2":{"94":1}}],["目标接口",{"2":{"97":2}}],["解耦了客户端和被适配者之间的依赖关系",{"2":{"96":1}}],["会执行自己的操作",{"2":{"93":1}}],["灵活地组合多个装饰器",{"2":{"92":1}}],["灵活地处理对象的层次结构",{"2":{"88":1}}],["动作移动到函数中",{"2":{"150":1}}],["动作",{"0":{"150":1}}],["动态地添加额外的功能时",{"2":{"91":1}}],["动态地向对象添加额外的功能",{"2":{"90":1}}],["动物在叫",{"2":{"17":2}}],["装饰器抽象类中的操作方法会先调用组件对象的操作方法",{"2":{"93":1}}],["装饰器抽象类",{"2":{"93":2}}],["装饰器模式的设计需要提前进行对象的定义和装饰器类的设计",{"2":{"92":1}}],["装饰器模式适用于以下情况",{"2":{"91":1}}],["装饰器模式通过将对象包装在装饰器类中",{"2":{"90":1}}],["装饰器模式",{"0":{"90":1},"1":{"91":1,"92":1,"93":1},"2":{"90":1}}],["装箱",{"2":{"44":2}}],["装箱和拆箱",{"0":{"44":1}}],["包含了一个抽象的操作方法",{"2":{"93":1}}],["包含了根节点",{"2":{"89":1}}],["包含了添加",{"2":{"89":1}}],["runtimeexception",{"2":{"177":2}}],["row",{"2":{"103":12}}],["root",{"2":{"89":10}}],["retiredamount",{"2":{"176":4}}],["return",{"2":{"21":2,"33":2,"58":2,"62":2,"67":2,"72":4,"77":4,"99":8,"107":4,"108":2,"112":6,"149":6,"150":4,"151":4,"152":8,"163":6,"164":3,"165":10,"170":12,"173":8,"176":10,"177":6,"179":4,"181":8,"182":6,"186":4,"187":2,"205":2}}],["result",{"2":{"168":4,"176":12,"181":12,"205":4}}],["resize",{"2":{"166":4}}],["reading",{"2":{"150":3}}],["readings",{"2":{"150":4}}],["readonly",{"2":{"62":2}}],["request",{"2":{"97":11}}],["removeelementat",{"2":{"205":2}}],["remove",{"2":{"89":10}}],["rendering",{"2":{"85":4}}],["render",{"2":{"85":9}}],["rendererb",{"2":{"85":12}}],["renderera",{"2":{"85":12}}],["renderer",{"2":{"85":15}}],["record",{"0":{"35":1,"39":1},"1":{"36":1,"37":1,"38":1,"39":1,"40":1}}],["refargument",{"2":{"19":6}}],["ref",{"2":{"19":5}}],["ref和out关键字",{"0":{"19":1}}],["叶子组件类",{"2":{"89":2}}],["整体层次结构",{"2":{"87":1,"89":1}}],["整体",{"2":{"86":1}}],["部分",{"2":{"86":1}}],["部分类",{"0":{"16":1},"2":{"16":1}}],["扩展抽象部分",{"2":{"85":2}}],["扩展性高",{"2":{"71":1}}],["增加了设计的难度",{"2":{"84":1,"88":1,"92":1}}],["增加了系统的复杂性",{"2":{"84":1,"88":1,"92":1}}],["增加了代码的复杂性",{"2":{"61":1,"96":1}}],["符合开闭原则",{"2":{"84":1}}],["从而简化了代码的复杂性",{"2":{"86":1}}],["从而可以灵活地扩展和修改系统的功能",{"2":{"82":1}}],["从托管堆中分配类型要求的字节数",{"2":{"8":1}}],["桥接模式的设计需要提前进行抽象和实现的分离",{"2":{"84":1}}],["桥接模式适用于以下情况",{"2":{"83":1}}],["桥接模式通过组合的方式",{"2":{"82":1}}],["桥接模式",{"0":{"82":1},"1":{"83":1,"84":1,"85":1},"2":{"82":1}}],["外观类",{"2":{"81":2}}],["外观模式可能会引入一个新的单点故障",{"2":{"80":1}}],["外观模式适用于以下情况",{"2":{"79":1}}],["外观模式通过定义一个高层接口",{"2":{"78":1}}],["外观模式",{"0":{"78":1},"1":{"79":1,"80":1,"81":1},"2":{"78":1}}],["难以支持新种类的产品",{"2":{"76":1}}],["该超级工厂又称为其他工厂的工厂",{"2":{"74":1}}],["该构造器什么都不做",{"2":{"8":1}}],["每次赋值创建一个独立的对应的临时变量",{"2":{"167":1}}],["每次增加一个产品时",{"2":{"71":1}}],["每当你为某个类增加一个子类时",{"2":{"125":1}}],["每个对象最好都只因一种变化而修改",{"2":{"119":1}}],["每个对象包含",{"2":{"8":1}}],["屏蔽产品的具体实现",{"2":{"71":1}}],["一整组测试就是一个强大的bug侦查器",{"2":{"208":1}}],["一个负责查询",{"2":{"141":1}}],["一个分层良好的系统应该将gui处理事件和业务逻辑的代码分开",{"2":{"104":1}}],["一个系统要由多个产品系列中的一个来配置时",{"2":{"75":1}}],["一个系统要独立于它的产品创建",{"2":{"75":1}}],["一个调用者想创建一个对象",{"2":{"71":1}}],["一旦需要扩展功能",{"2":{"61":1}}],["最后",{"2":{"67":1,"85":1,"89":1,"93":1}}],["最终调用object构造器",{"2":{"8":1}}],["显示分离",{"0":{"192":1}}],["显示树形结构",{"2":{"89":2}}],["显示原型和克隆对象的信息",{"2":{"67":2}}],["显示产品信息",{"2":{"58":2}}],["克隆原型对象",{"2":{"67":2}}],["克隆方法的实现可能会比较复杂",{"2":{"66":1}}],["原型类",{"2":{"67":2}}],["原型模式适用于以下情况",{"2":{"65":1}}],["原型模式是一种创建型设计模式",{"2":{"64":1}}],["原型模式",{"0":{"64":1},"1":{"65":1,"66":1,"67":1}}],["原型对象",{"0":{"63":1}}],["获取单例实例",{"2":{"62":3}}],["获取构建好的产品",{"2":{"58":2}}],["防止外部实例化",{"2":{"62":2}}],["私有构造函数",{"2":{"62":2}}],["缺点",{"2":{"61":1,"66":1,"80":1,"84":1,"88":1,"92":1,"96":1}}],["提炼接口",{"0":{"202":1}}],["提炼超类",{"0":{"201":1}}],["提炼子类",{"0":{"200":1}}],["提炼继承体系",{"0":{"193":1}}],["提炼类",{"0":{"183":1}}],["提炼函数",{"0":{"162":1}}],["提炼出重复的代码",{"2":{"115":1}}],["提高编程速度",{"2":{"155":1}}],["提高代码的复用性",{"2":{"96":1}}],["提高代码的可维护性",{"2":{"66":1}}],["提高系统的灵活性和可维护性",{"2":{"81":1}}],["提高了系统的灵活性",{"2":{"84":1}}],["提高了系统的灵活性和可维护性",{"2":{"80":1}}],["提高了性能",{"2":{"61":1}}],["提供一个统一的接口给客户端",{"2":{"81":1}}],["提供一个接口",{"2":{"46":1}}],["提供一种统一的接口来创建不同类型的对象",{"2":{"69":1}}],["提供了一个统一的接口给客户端",{"2":{"80":1}}],["提供了一种将对象的实例化过程封装在工厂类中的方式",{"2":{"69":1}}],["提供了对唯一实例的全局访问点",{"2":{"61":1}}],["优点",{"2":{"61":1,"66":1,"80":1,"84":1,"88":1,"92":1,"96":1}}],["优点和缺点",{"0":{"61":1,"66":1,"80":1,"84":1,"88":1,"92":1,"96":1}}],["客户端可以简单地使用系统的功能",{"2":{"81":1}}],["客户端代码",{"2":{"58":2,"62":2,"67":2,"81":2,"85":2,"89":2,"93":2,"97":2}}],["客户端评估",{"2":{"22":3}}],["指导者类",{"2":{"58":2}}],["指定将在查询表达式中返回数据源中的哪些元素",{"2":{"25":1}}],["具体装饰器b的操作",{"2":{"93":2}}],["具体装饰器类在调用父类的操作方法之后",{"2":{"93":1}}],["具体装饰器类b",{"2":{"93":2}}],["具体装饰器类a",{"2":{"93":2}}],["具体装饰器a的操作",{"2":{"93":2}}],["具体组件的操作",{"2":{"93":2}}],["具体组件类",{"2":{"93":2}}],["具体实现部分b",{"2":{"85":2}}],["具体实现部分a",{"2":{"85":2}}],["具体原型类",{"2":{"67":2}}],["具体生成器类",{"2":{"58":2}}],["具有与委托相同的返回值和参数",{"2":{"47":1}}],["抽象部分和实现部分通过桥接模式进行了解耦",{"2":{"85":1}}],["抽象部分通过调用实现部分的",{"2":{"85":1}}],["抽象部分是",{"2":{"85":1}}],["抽象部分",{"2":{"85":2}}],["抽象工厂模式",{"2":{"74":1}}],["抽象工厂",{"0":{"73":1},"1":{"74":1,"75":1,"76":1,"77":1}}],["抽象生成器类",{"2":{"58":2}}],["抽象方法",{"0":{"17":1},"2":{"17":1}}],["产品类",{"2":{"58":2}}],["代码必须起码能够在大部分情况下正常运作",{"2":{"159":1}}],["代码的坏味道",{"0":{"114":1},"1":{"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1}}],["代码比较容易阅读",{"2":{"99":1}}],["代码示例",{"0":{"58":1,"62":1,"67":1,"72":1,"77":1,"81":1,"85":1,"89":1,"93":1,"97":1}}],["代码复用性高",{"2":{"57":1}}],["使软件更易被理解",{"2":{"155":1}}],["使他们在调用函数之前就检查",{"2":{"152":1}}],["使其中一个可以引用另一个class",{"2":{"105":1}}],["使它们可以独立地变化",{"2":{"82":1}}],["使得原本不兼容的类可以协同工作",{"2":{"97":1}}],["使得代码更加灵活和可维护",{"2":{"93":1}}],["使得客户端可以一致地处理单个对象和组合对象",{"2":{"88":1}}],["使得客户端可以更加方便地与系统进行交互",{"2":{"78":1}}],["使得抽象部分和实现部分可以独立地进行扩展和修改",{"2":{"85":1}}],["使得系统中类的个数成倍增加",{"2":{"71":1}}],["使得构建过程更加灵活",{"2":{"57":1}}],["使用的api中不存在该函数",{"2":{"187":1}}],["使用",{"2":{"124":1}}],["使用extract",{"2":{"117":1}}],["使用replace",{"2":{"116":1,"118":1}}],["使用继承会导致类的数量急剧增加",{"2":{"91":1}}],["使用指导者构建产品",{"2":{"58":2}}],["使用多个简单的对象一步一步构建成一个复杂的对象",{"2":{"55":1}}],["使用场景",{"0":{"40":1,"56":1,"60":1,"65":1,"70":1,"75":1,"79":1,"83":1,"87":1,"91":1,"95":1}}],["使用匿名类型或命名类型来存储键元素",{"2":{"27":1}}],["使用sql语句在数据库服务器上完成数据筛选的过程叫做",{"2":{"22":1}}],["使用is",{"2":{"9":1}}],["分解条件式",{"0":{"172":1}}],["分解临时变量",{"0":{"167":1}}],["分解函数",{"2":{"116":1}}],["分支节点和叶子节点",{"2":{"89":1}}],["分离构建过程和表示",{"2":{"57":1}}],["分组联接",{"2":{"30":1}}],["分组",{"2":{"27":1}}],["概要",{"0":{"55":1,"69":1,"74":1},"1":{"56":1,"57":1,"70":1,"71":1,"75":1,"76":1}}],["对模式进行组合",{"2":{"53":1}}],["对于值类型的变量",{"2":{"44":1}}],["对于值类型的表达式",{"2":{"43":1}}],["对于引用类型的变量",{"2":{"44":1}}],["对于引用类型的表达式",{"2":{"43":1}}],["对于大部分情况来讲",{"2":{"22":1}}],["对于普通集合",{"2":{"22":1}}],["逻辑模式",{"0":{"53":1}}],["98",{"2":{"165":4,"174":4}}],["95",{"2":{"165":4,"174":4}}],["9",{"2":{"52":1,"107":4}}],["关系模式",{"0":{"52":1}}],["关系模式和逻辑模式",{"2":{"50":1}}],["下面我先用一个示例来展示一下模式匹配的一般的用法",{"2":{"50":1}}],["下面举个例子说明",{"2":{"22":1}}],["语句的增强",{"2":{"50":1}}],["引入外加函数",{"0":{"187":1}}],["引入断言",{"0":{"179":1}}],["引入null对象",{"0":{"178":1}}],["引入解释性变量",{"0":{"166":1}}],["引入参数对象",{"0":{"146":1}}],["引入本地扩展",{"0":{"188":1},"2":{"133":1}}],["引入了额外的类和接口",{"2":{"84":1,"88":1,"92":1,"96":1}}],["引入的",{"2":{"50":1}}],["引用传出参数",{"2":{"19":1}}],["引用传递参数",{"2":{"19":1}}],["引用托管堆上的类型",{"2":{"13":1}}],["引用类型实例总是存储在堆中",{"2":{"43":1}}],["引用类型复制内存地址",{"2":{"13":1}}],["引用类型初始化默认null",{"2":{"13":1}}],["引用类型",{"2":{"13":3}}],["引用类型和值类型",{"0":{"11":1,"13":1},"1":{"12":1,"13":1}}],["75",{"2":{"181":4}}],["78581542",{"2":{"124":1}}],["7",{"2":{"50":1,"181":8}}],["776",{"2":{"22":2}}],["模式匹配有三个模式",{"2":{"50":1}}],["模式匹配",{"0":{"50":1},"1":{"51":1,"52":1,"53":1},"2":{"50":1}}],["zhihu",{"2":{"160":1}}],["zhruifei的博客",{"2":{"49":1}}],["zstu",{"2":{"1":1}}],["即可简单实现",{"2":{"49":1}}],["即使元素类型是值类型",{"2":{"42":1}}],["都需要增加一个具体类和对象实现工厂",{"2":{"71":1}}],["都需要实现bark",{"2":{"49":1}}],["都是值类型",{"2":{"13":1}}],["都是引用类型",{"2":{"13":1}}],["方便了对象的访问",{"2":{"61":1}}],["方便扩展",{"2":{"49":1}}],["方便调用",{"2":{"49":1}}],["方便统一管理",{"2":{"49":1}}],["方法中调用了被适配者的",{"2":{"97":1}}],["方法",{"2":{"97":3}}],["方法来绘制圆形",{"2":{"85":1}}],["方法来完成具体的绘制操作",{"2":{"85":1}}],["方法或接口时",{"2":{"48":1}}],["方法调用",{"2":{"43":1}}],["方法声明如下",{"2":{"22":1}}],["请使用接口",{"2":{"48":1}}],["请使用委托",{"2":{"48":1}}],["当希望对对象的结构进行递归组合",{"2":{"87":1}}],["当希望将系统的内部结构与外部客户端分离",{"2":{"79":1}}],["当出现新种类的产品时需要扩展抽象工厂的接口",{"2":{"76":1}}],["当你用别人的类库但不能满足需求时",{"2":{"133":1}}],["当你提供一个产品类库",{"2":{"75":1}}],["当你要强调一系列相关的产品对象的设计以便进行联合使用时",{"2":{"75":1}}],["当需要使用注释时",{"2":{"116":1}}],["当需要复用已有的类",{"2":{"95":1}}],["当需要将一个类的接口转换成另一个接口时",{"2":{"95":1}}],["当需要对一个对象的功能进行多次扩展时",{"2":{"91":1}}],["当需要表示对象的部分",{"2":{"87":1}}],["当需要在不改变现有对象结构的情况下",{"2":{"91":1}}],["当需要在运行时动态地切换抽象部分和实现部分的连接时",{"2":{"83":1}}],["当需要在抽象部分和实现部分之间建立一个稳定的连接",{"2":{"83":1}}],["当需要简化复杂系统的接口",{"2":{"79":1}}],["当需要避免通过子类化来创建对象的情况",{"2":{"65":1}}],["当需要控制对一个资源的并发访问时",{"2":{"60":1}}],["当一个类希望由它的子类来指定它所创建的对象的时候",{"2":{"70":1}}],["当一个类不知道它所必须创建的对象的类的时候",{"2":{"70":1}}],["当一个类只需要一个实例",{"2":{"60":1}}],["当一个系统需要独立于其产品的创建",{"2":{"65":1}}],["当构造过程必须允许被构造的对象有不同的表示时",{"2":{"56":1}}],["当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时",{"2":{"56":1}}],["当正在实现的方法链接到类的类型或标识时",{"2":{"48":1}}],["当使用接口的类想要将该接口强制转换为其他接口或类类型时",{"2":{"48":1}}],["当使用事件设计模式时",{"2":{"48":1}}],["当类将创建对象的职责委托给多个帮助子类中的某一个",{"2":{"70":1}}],["当类只需要方法的单个实现时",{"2":{"48":1}}],["当类可能需要该方法的多个实现时",{"2":{"48":1}}],["当存在一组可能被调用的相关方法时",{"2":{"48":1}}],["当调用方不需要访问实现该方法的对象中的其他属性",{"2":{"48":1}}],["当封装静态方法可取时",{"2":{"48":1}}],["当数据会丢失精度时",{"2":{"12":1}}],["必须为另外一个类增加子类",{"2":{"125":1}}],["必须创建一个委托实例",{"2":{"47":1}}],["必须有一个方法包含了要执行的代码",{"2":{"47":1}}],["必须告诉编译器将object拆箱成什么类型",{"2":{"44":1}}],["声明委托类型",{"2":{"47":1}}],["希望律师去执行这些指令",{"2":{"46":1}}],["希望你的朋友也去读它",{"2":{"42":1}}],["遗嘱一般是某人去世前写好",{"2":{"46":1}}],["遗嘱由一系列指令组成",{"2":{"46":1}}],["其中一部分工作是以大量条件式完成的",{"2":{"193":1}}],["其中包含一个",{"2":{"97":1}}],["其中包含一个抽象的克隆方法",{"2":{"67":1}}],["其内完全取决于参数值而采取不同的反应",{"2":{"143":1}}],["其他原因使得宿主类不能被subclassing",{"2":{"112":1}}],["其余财产留给猫",{"2":{"46":1}}],["其实就是继承了ienumerable接口的接口",{"2":{"22":1}}],["捐善款",{"2":{"46":1}}],["付账单",{"2":{"46":1}}],["举个栗子",{"2":{"46":1}}],["什么是委托",{"0":{"46":1}}],["官方文档",{"2":{"45":1,"48":1}}],["委托关系",{"0":{"185":1}}],["委托实例",{"2":{"47":1}}],["委托正是如此",{"2":{"46":1}}],["委托在某种程度上提供了间接的方法",{"2":{"46":1}}],["委托",{"0":{"45":1},"1":{"46":1,"47":1,"48":1}}],["委托类型",{"2":{"42":1}}],["否则会抛出异常",{"2":{"44":1}}],["拆箱",{"2":{"44":1}}],["拆箱int",{"2":{"44":1}}],["先来回顾两个重要事实",{"2":{"44":1}}],["先假设你读的是一份真正的报纸",{"2":{"42":1}}],["幸好",{"2":{"44":1}}],["有些函数在各个子类中产生完全相同的结果",{"2":{"196":1}}],["有一个函数从来没被其他class调用",{"2":{"148":1}}],["有优缺点",{"0":{"57":1,"71":1,"76":1}}],["有时",{"2":{"44":1}}],["有两种表示形式",{"2":{"13":1}}],["它和其他class的关系似乎比较密切",{"2":{"181":2}}],["它有一个",{"2":{"97":1}}],["它有利于产品的一致性",{"2":{"76":1}}],["它继承自",{"2":{"93":1}}],["它实现了目标接口",{"2":{"97":1}}],["它实现了组件的具体操作",{"2":{"93":1}}],["它实现了克隆方法",{"2":{"67":1}}],["它作为组件的基类",{"2":{"89":1,"93":1}}],["它允许将一个类的接口转换成客户端所期望的另一个接口",{"2":{"94":1}}],["它允许将对象组合成树形结构以表示",{"2":{"86":1}}],["它允许在不改变现有对象结构的情况下",{"2":{"90":1}}],["它允许根据值类型创建一个对象",{"2":{"44":1}}],["它们的本体几乎完全一致",{"2":{"197":1}}],["它们分别继承自",{"2":{"93":1}}],["它们分别表示叶子节点和容器节点",{"2":{"89":1}}],["它们分别表示系统中的不同部分",{"2":{"81":1}}],["它们负责实现具体的绘制逻辑",{"2":{"85":1}}],["它定义了绘制图形的高层次逻辑",{"2":{"85":1}}],["它将抽象部分与实现部分分离",{"2":{"82":1}}],["它封装了子系统的操作",{"2":{"81":1}}],["它提供了一个统一的接口",{"2":{"78":1}}],["它提供了一种创建对象的最佳方式",{"2":{"55":1,"74":1}}],["它使得易于交换产品系列",{"2":{"76":1}}],["它使用现有对象作为原型",{"2":{"64":1}}],["它分离了具体的类",{"2":{"76":1}}],["它的构造函数被声明为私有",{"2":{"62":1}}],["它的值永远是该类型的值",{"2":{"44":1}}],["它的值永远是一个引用",{"2":{"44":1}}],["它的值是一个引用",{"2":{"43":1}}],["它的值就是表达式的值",{"2":{"43":1}}],["它确保一个类只有一个实例",{"2":{"59":1}}],["它标识了对象的实际类型",{"2":{"43":1}}],["值域下移",{"0":{"199":1}}],["值域上移",{"0":{"195":1}}],["值不需要额外的信息来描述实际是什么类型",{"2":{"43":1}}],["值类型不可以派生出其他类型",{"2":{"43":1}}],["值类型和引用类型基础知识",{"0":{"43":1}}],["值类型和引用类型的差异与现实世界中差别类似",{"2":{"42":1}}],["值类型赋值时复制值",{"2":{"13":1}}],["值类型初始化默认0",{"2":{"13":1}}],["值类型的局限",{"2":{"13":1}}],["值类型建议标记为readonly",{"2":{"13":1}}],["值类型栈上分配",{"2":{"13":2}}],["值类型",{"2":{"13":1}}],["静态变量也是",{"2":{"43":1}}],["静态类",{"0":{"15":1}}],["以继承取代委托",{"0":{"206":1}}],["以委托取代继承",{"0":{"205":1}}],["以委托替代继承",{"2":{"135":1}}],["以一个subclass",{"2":{"193":1}}],["以一个对象取代这些参数",{"2":{"146":1}}],["以多态取代条件式",{"0":{"177":1}}],["以卫语句取代嵌套条件式",{"0":{"176":1}}],["以函数对象取代函数",{"0":{"169":1}}],["以函数取代参数",{"0":{"145":1}}],["以查询取代临时变量",{"0":{"165":1}}],["以测试取代异常",{"0":{"152":1}}],["以",{"0":{"149":1}}],["以明确的函数取代参数",{"0":{"143":1}}],["以参数表达那些不同的值",{"2":{"142":1}}],["以值域取代子类",{"0":{"113":1}}],["以state",{"0":{"112":1}}],["以子类取代型别码",{"0":{"111":1}}],["以类取代型别码",{"0":{"110":1}}],["以符号常量",{"0":{"107":1}}],["以对象取代数组",{"0":{"103":1}}],["以对象取代数据值",{"0":{"100":1}}],["以此实现对对象的透明包装",{"2":{"90":1}}],["以递归地显示整个树形结构",{"2":{"89":1}}],["以便能够以相同的方式处理单个对象和组合对象时",{"2":{"87":1}}],["以提高系统的灵活性和可维护性时",{"2":{"79":1}}],["以防止外部实例化",{"2":{"62":1}}],["以下面为例",{"2":{"43":1}}],["以升序或降序排序",{"2":{"29":1}}],["空字符串的引用",{"2":{"43":1}}],["所以表达式string",{"2":{"43":1}}],["所有方法都隐式密封",{"2":{"13":1}}],["所有方法不能是抽象的",{"2":{"13":1}}],["所有的",{"2":{"13":1}}],["所有",{"2":{"13":1}}],["所有类型都从system",{"0":{"8":1}}],["然后就发现代码中满是错误",{"2":{"159":1}}],["然后就不再改变",{"2":{"147":1}}],["然后通过适配器对象",{"2":{"97":1}}],["然后通过关联它们的实例创建了扩展抽象部分",{"2":{"85":1}}],["然后再执行装饰器对象b的操作方法",{"2":{"93":1}}],["然后再执行自己的操作",{"2":{"93":1}}],["然后将装饰器类嵌套在其他装饰器类中",{"2":{"90":1}}],["然后分别显示它们的信息",{"2":{"67":1}}],["然后",{"2":{"67":1,"81":1,"89":1,"93":3,"97":1}}],["然后放到一个安全的地方",{"2":{"46":1}}],["然后使用对这个新对象的引用",{"2":{"44":1}}],["然后在内存中进行数据的过滤",{"2":{"22":1}}],["然而",{"2":{"43":1}}],["的一个清楚讯号就是",{"2":{"159":1}}],["的条件",{"2":{"152":1}}],["的动作",{"2":{"150":1}}],["的处理方式反过来",{"2":{"130":1}}],["的函数身上",{"2":{"113":1}}],["的值在对象生命期中发生变化",{"2":{"112":1}}],["的值就是5",{"2":{"43":1}}],["的层次结构",{"2":{"86":1}}],["的方法",{"2":{"49":1}}],["的性能比较低",{"2":{"22":1}}],["例如双向关联",{"2":{"131":1}}],["例如使用不同的渲染引擎进行绘制",{"2":{"85":1}}],["例如数据库连接池",{"2":{"60":1}}],["例如比较方法",{"2":{"48":1}}],["例如",{"2":{"43":1,"46":1}}],["索引器和其他表达式",{"2":{"43":1}}],["变量c其实可以忽略",{"2":{"51":1}}],["变量的值在它声明时的位置存储",{"2":{"43":1}}],["变量",{"2":{"43":1}}],["变成了客户端评估",{"2":{"22":1}}],["要掌握的重要概念是一个特殊表达式的值是什么",{"2":{"43":1}}],["要线程同步就不要属性",{"2":{"21":1}}],["仍是引用类型",{"2":{"42":1}}],["数据泥团",{"0":{"122":1}}],["数据存放于堆上",{"2":{"37":1}}],["数组类型是引用类型",{"2":{"42":1}}],["特殊情况包括如下方面",{"2":{"42":1}}],["是指两个类做的差不多的事",{"2":{"132":1}}],["是一种结构型设计模式",{"2":{"78":1,"82":1,"86":1,"90":1,"94":1}}],["是一种创建型设计模式",{"2":{"59":1}}],["是围绕一个超级工厂创建其他工厂",{"2":{"74":1}}],["是对",{"2":{"50":1}}],["是在",{"2":{"50":1}}],["是值类型",{"2":{"42":2}}],["是引用类型",{"2":{"42":3}}],["你在两个classes",{"2":{"206":1}}],["你在各个子类中拥有一些构造函数",{"2":{"197":1}}],["你有某个class",{"2":{"193":1}}],["你有一个函数",{"2":{"143":1}}],["你有一个类",{"2":{"101":1}}],["你还可以为它加上equals",{"2":{"179":1}}],["你需要再三检查",{"2":{"178":1}}],["你就应该重构",{"2":{"157":1}}],["你抛出一个异常",{"2":{"152":1}}],["你的class中的某个值域",{"2":{"147":1}}],["你从某个对象中取出若干值",{"2":{"144":1}}],["你可能只是试着做点测试",{"2":{"159":1}}],["你可能发现需要一个反向指针双向连接两个classes",{"2":{"105":1}}],["你可能会在两个classes之间建立一条单向连接",{"2":{"105":1}}],["你以后创建的引用类型极有可能比值类型多很多",{"2":{"42":1}}],["你和朋友看见的页面都会更改",{"2":{"42":1}}],["假设我们有一个date类",{"2":{"133":1}}],["假设有一个program类",{"2":{"49":1}}],["假设有dog类",{"2":{"49":1}}],["假设你在读一份非常棒的东西",{"2":{"42":1}}],["假如网页某个内容发生变化",{"2":{"42":1}}],["唯一需要给朋友的是网页url",{"2":{"42":1}}],["与前一次相比",{"2":{"42":1}}],["与抽象类相似",{"2":{"17":1}}],["再假设你正在读的是一个网页",{"2":{"42":1}}],["各自的信息相互独立",{"2":{"42":1}}],["制作了副本后",{"2":{"42":1}}],["为这两个类建立一个超类",{"2":{"201":1}}],["为何重构",{"0":{"155":1}}],["为什么有接口",{"2":{"49":1}}],["为什么微软还要推出一个iqueryable呢",{"2":{"22":1}}],["为了进一步演示这个问题",{"2":{"43":1}}],["为了给朋友一份",{"2":{"42":1}}],["为使问题更加具体",{"2":{"43":1}}],["深入理解c",{"2":{"41":1}}],["中的单元测试",{"0":{"209":1}}],["中的值类型和引用类型",{"0":{"41":1},"1":{"42":1,"43":1,"44":1}}],["中间转手人",{"0":{"130":1}}],["中可以通过ienumerable和iqueryable提取出int数组中大于10的数据",{"2":{"22":1}}],["浅拷贝",{"2":{"40":1}}],["作为不可变数据类型对于并行计算和数据共享十分安全",{"2":{"40":1}}],["通常可以使用内联类的方式",{"2":{"120":1}}],["通常作为一种一次性的传输型数据",{"2":{"40":1}}],["通过委托的方法让其中一个调用另外一个",{"2":{"190":1}}],["通过调用组件的添加和移除方法",{"2":{"89":1}}],["通过调用外观对象的操作方法",{"2":{"81":1}}],["通过使用装饰器模式",{"2":{"93":1}}],["通过使用外观模式",{"2":{"81":1}}],["通过使用工厂模式",{"2":{"69":1}}],["通过使用with表达式",{"2":{"40":1}}],["通过复制这些原型来创建新的对象",{"2":{"64":1}}],["通过静态属性",{"2":{"62":1}}],["通过同步锁可以实现线程安全",{"2":{"21":1}}],["简化条件表达式",{"0":{"171":1},"1":{"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1}}],["简化函数调用",{"0":{"137":1},"1":{"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1}}],["简化函数的调用动作",{"2":{"122":1}}],["简化了复杂系统的使用",{"2":{"78":1,"80":1}}],["简化复杂系统",{"0":{"78":1},"1":{"79":1,"80":1,"81":1}}],["简单的说就是把字段用get",{"2":{"134":1}}],["简单的类型",{"2":{"13":1}}],["简单模式",{"0":{"51":1},"2":{"50":1}}],["简单委托的构成",{"0":{"47":1}}],["简单来说",{"2":{"46":1}}],["简短的",{"2":{"39":1}}],["用异常取代错误码",{"0":{"151":1}}],["用函数",{"2":{"118":1}}],["用以复用",{"2":{"115":1}}],["用于隐藏委托关系",{"2":{"185":1}}],["用于访问子系统中的一组接口",{"2":{"78":1}}],["用于api返回的数据",{"2":{"40":1}}],["用于存储子表达式",{"2":{"31":1}}],["用来存放不可变的",{"2":{"39":1}}],["判断的是值",{"2":{"39":1}}],["实现对对象功能的多次扩展",{"2":{"92":1}}],["实现部分是",{"2":{"85":1}}],["实现部分",{"2":{"85":2}}],["实际上会先调用装饰器对象a的操作方法",{"2":{"93":1}}],["实际上是通过class特殊处理实现其功能",{"2":{"39":1}}],["实际发生的情况就是装箱",{"2":{"44":1}}],["实例变量的值总是存储在实例本身存储的地方",{"2":{"43":1}}],["实例所需字节数",{"2":{"8":1}}],["本身属于引用类型",{"2":{"39":1}}],["故常用于简单类型",{"2":{"38":1}}],["支持多态",{"2":{"37":1}}],["属于值类型",{"2":{"38":1}}],["属于引用类型",{"2":{"37":2}}],["属性时",{"2":{"62":1}}],["属性方法可以抛出异常",{"2":{"21":1}}],["属性不能作为ref与out参数传递给方法",{"2":{"21":1}}],["属性与字段",{"0":{"21":1}}],["属性",{"0":{"20":1},"1":{"21":1}}],["unreachable",{"2":{"177":2}}],["uml+crc卡片",{"2":{"157":1}}],["url代替引用",{"2":{"42":1}}],["using",{"2":{"34":1,"58":1,"62":1,"67":1,"72":1,"77":1,"81":1,"89":3,"93":1,"97":1}}],["updates",{"2":{"34":6}}],["up",{"2":{"1":1}}],["编写单元测试代码",{"0":{"34":1}}],["编译器可以最终综合在一起",{"2":{"16":1}}],["编译器报错",{"2":{"13":2}}],["编译器直接支持的类型",{"2":{"12":1}}],["编译器",{"0":{"5":1}}],["编译源代码过程",{"0":{"4":1},"1":{"5":1}}],["创建适配器对象",{"2":{"97":2}}],["创建被适配者对象",{"2":{"97":2}}],["创建具体装饰器对象b",{"2":{"93":2}}],["创建具体装饰器对象a",{"2":{"93":2}}],["创建具体组件对象",{"2":{"93":2}}],["创建具体实现部分b",{"2":{"85":2}}],["创建具体实现部分a",{"2":{"85":2}}],["创建树形结构",{"2":{"89":2}}],["创建扩展抽象部分",{"2":{"85":4}}],["创建原型对象",{"2":{"67":2}}],["创建生成器和指导者对象",{"2":{"58":2}}],["创建型模式",{"0":{"54":1,"59":1,"63":1,"68":1,"73":1},"1":{"55":1,"56":1,"57":1,"58":1,"60":1,"61":1,"62":1,"69":1,"70":1,"71":1,"72":1,"74":1,"75":1,"76":1,"77":1}}],["创建一个类",{"0":{"33":1}}],["创建复合键",{"2":{"27":1}}],["需要由调用者执行",{"2":{"150":1}}],["需要扩展可以试试",{"2":{"133":1}}],["需要根据不同的业务把方法搬移到不同的类中",{"2":{"132":1}}],["需要适配的类",{"2":{"97":2}}],["需要为每个具体原型类编写克隆方法",{"2":{"66":1}}],["需要用同一个方法实现打印不同的话",{"2":{"49":1}}],["需要方便的组合",{"2":{"48":1}}],["需要影印报纸的全部内容并交给他",{"2":{"42":1}}],["需要值比较的数据",{"2":{"39":1}}],["需要使用defaultifempty",{"2":{"30":1}}],["需要在父类中进行实现",{"2":{"17":1}}],["左外部联接",{"2":{"30":1}}],["element",{"2":{"205":8}}],["else",{"2":{"151":2,"165":4,"172":4,"174":4,"176":6,"178":2,"181":4}}],["either",{"2":{"179":2}}],["european",{"2":{"177":2}}],["e",{"2":{"152":2}}],["extends",{"2":{"197":2,"205":4}}],["extension",{"2":{"133":1}}],["expenselimit",{"2":{"179":10}}],["expense",{"2":{"179":8}}],["existing",{"2":{"34":2}}],["employeetype",{"2":{"112":6}}],["employee",{"2":{"112":4,"149":6,"197":2}}],["empty的值不是一个空字符串",{"2":{"43":1}}],["empty",{"2":{"30":2}}],["end",{"2":{"172":2}}],["engineer",{"2":{"112":6,"149":6}}],["enum声明",{"2":{"42":1}}],["enjoy",{"2":{"1":1}}],["equalto",{"2":{"34":6}}],["equals",{"2":{"30":6,"143":4,"170":6,"175":8}}],["内部联接",{"2":{"30":1}}],["内存管理",{"0":{"3":1}}],["联接",{"0":{"30":1}}],["默认比较的是对象的引用地址是否相等",{"2":{"37":1}}],["默认升序",{"2":{"29":2}}],["默认初始化为0",{"2":{"13":2}}],["组件抽象类",{"2":{"89":2,"93":2}}],["组合模式的设计需要提前进行对象的层次结构的定义",{"2":{"88":1}}],["组合模式适用于以下情况",{"2":{"87":1}}],["组合模式使得客户端可以统一地处理单个对象和组合对象",{"2":{"86":1}}],["组合模式",{"0":{"86":1},"1":{"87":1,"88":1,"89":1},"2":{"86":1}}],["组合和表示时",{"2":{"65":1,"75":1}}],["组",{"2":{"29":1}}],["0可以简写为",{"2":{"52":1}}],["0m",{"2":{"51":4}}],["00m",{"2":{"51":4,"52":20,"53":10}}],["0",{"2":{"28":2,"30":2,"33":4,"50":1,"89":2,"103":2,"112":2,"149":2,"151":2,"152":4,"165":8,"166":4,"170":2,"173":8,"174":8,"175":4,"177":2,"181":4,"205":6}}],["子系统类c",{"2":{"81":2}}],["子系统类b",{"2":{"81":2}}],["子系统类a",{"2":{"81":2}}],["子句可用于将来自不同源序列并且在对象模型中没有直接关系的元素相关联",{"2":{"30":1}}],["子句可导致返回的序列或子序列",{"2":{"29":1}}],["子句的结果存储至新标识符",{"2":{"28":1}}],["子类复写",{"2":{"17":1}}],["john",{"2":{"170":6,"175":4,"186":4}}],["join",{"0":{"30":1},"2":{"28":1,"30":2}}],["j",{"2":{"44":2}}],["javascriptlet",{"2":{"31":1}}],["javascriptjoin",{"2":{"30":3}}],["javascriptgroup",{"2":{"27":2,"28":1}}],["javascript",{"2":{"25":1,"29":1}}],["javascriptfrom",{"2":{"24":1,"26":1}}],["上下文关键字创建临时标识符",{"2":{"28":1}}],["选择筛选的结果",{"2":{"26":1}}],["也就是重构之后软件一如既往",{"2":{"154":1}}],["也就是把",{"2":{"130":1}}],["也就是说如果新加入一个数据库",{"2":{"119":1}}],["也可以",{"2":{"25":2}}],["也不从方法返回",{"2":{"13":1}}],["效果可以类比foreach",{"2":{"24":1}}],["或者两个class的接口有部分相同",{"2":{"202":1}}],["或者一个class与另一个class有太多合作而形成高度耦合",{"2":{"181":1}}],["或",{"2":{"23":1,"28":1,"112":1}}],["查询表达式必须以from开头",{"2":{"24":1}}],["查询表达式",{"2":{"23":1}}],["查看where方法的定义",{"2":{"22":1}}],["在server端建立客户所需的所有函数",{"2":{"185":1}}],["在对象之间搬移特性",{"0":{"180":1},"1":{"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1}}],["在不断调整",{"2":{"160":1}}],["在子类中进行扩展",{"2":{"133":1}}],["在order中引用custom对象",{"2":{"123":2}}],["在一定程度上增加了系统的复杂度",{"2":{"71":1}}],["在客户端代码中",{"2":{"62":1,"81":1,"85":1,"89":1,"93":1,"97":1}}],["在访问",{"2":{"62":1}}],["在以下情况下",{"2":{"48":2}}],["在接触实际例子时",{"2":{"44":1}}],["在学习值类型和引用类型时",{"2":{"43":1}}],["在这种情况下",{"2":{"42":1}}],["在",{"2":{"41":1}}],["在==或equals的判断时",{"2":{"39":1}}],["在进行两个对象的==比较时",{"2":{"37":1}}],["在查询表达式中",{"2":{"29":1}}],["在使用ef",{"2":{"22":1}}],["在c",{"2":{"22":1,"42":1}}],["这并不是什么好事",{"2":{"71":1}}],["这样后续的重复查询就可以大大加快速度",{"2":{"141":1}}],["这样的代码就会不易理解",{"2":{"128":1}}],["这样",{"2":{"62":1,"67":1,"85":1,"89":1,"93":1,"97":1}}],["这种情况要移除中间人",{"2":{"130":1}}],["这种情况我们让一个继承体系的实例去引用另一个继承体系",{"2":{"125":1}}],["这种情况需要将所有需要修改的代码放进同一个类中",{"2":{"120":1}}],["这种模式可以避免使用继承导致的类爆炸问题",{"2":{"93":1}}],["这种模式允许我们创建对象的副本",{"2":{"64":1}}],["这种模式适用于需要在整个系统中共享一个对象实例的情况",{"2":{"59":1}}],["这种类型的设计模式属于创建型模式",{"2":{"55":1,"74":1}}],["这合理吗",{"2":{"44":1}}],["这将导致的一个结果是",{"2":{"43":1}}],["这是引用类型的行为",{"2":{"42":1}}],["这一次",{"2":{"42":1}}],["这完全取决于阅读的内容",{"2":{"42":1}}],["这次程序把t",{"2":{"22":1}}],["这里使用了表达式最常用的例子",{"2":{"43":1}}],["这里ef",{"2":{"22":1}}],["这里调用了enumerable类中的where方法",{"2":{"22":1}}],["如下",{"2":{"22":1}}],["如果有一个临时变量只被表达式赋值一次",{"2":{"164":1}}],["如果有一个引用对象",{"2":{"102":1}}],["如果中间人承受的委托过多",{"2":{"130":1}}],["如果用不到就不值得",{"2":{"127":1}}],["如果一个class做了应该由两个class做的事",{"2":{"183":1}}],["如果一个class的值域有另外一个class频繁的使用",{"2":{"182":1}}],["如果一个class有太多行为",{"2":{"181":1}}],["如果一个类没什么价值",{"2":{"126":1}}],["如果一个某个函数为了计算某个值几乎调用了另一个对象的大部分函数",{"2":{"121":1}}],["如果遇到某种变化需要在不同的类做出修改",{"2":{"120":1}}],["如果还是太多可以使用replace",{"2":{"116":1}}],["如果函数内有大量的参数和临时变量",{"2":{"116":1}}],["如果各个子类的唯一差别只在",{"2":{"113":1}}],["如果",{"2":{"112":1}}],["如果系统的接口发生变化",{"2":{"80":1}}],["如果想增加一个产品",{"2":{"71":1}}],["如果产品的属性较少",{"2":{"57":1}}],["如果是不同的人写",{"2":{"49":1}}],["如果使用referenceequals判断时会判断引用地址是否相同",{"2":{"39":1}}],["如果数据量非常庞大",{"2":{"22":1}}],["如果转型不成功则返回null",{"2":{"9":1}}],["接着",{"2":{"93":1,"97":1}}],["接下来",{"2":{"93":1}}],["接下来我们对代码稍微改变",{"2":{"22":1}}],["接口及其具体实现类",{"2":{"85":1}}],["接口的作用",{"2":{"49":1}}],["接口作用的深入理解",{"2":{"49":1}}],["接口类型",{"2":{"42":1}}],["接口",{"0":{"17":1,"49":1},"2":{"17":1}}],["$",{"2":{"22":4,"58":2,"67":2}}],["因为所有的客户端都依赖于外观类",{"2":{"80":1}}],["因为books变量是iqueryable",{"2":{"22":1}}],["因为enumerable类中定义的普通集合使用的where等方法都是",{"2":{"22":1}}],["因此使用接口来强制管理",{"2":{"49":1}}],["因此微软创造了iqueryable类型",{"2":{"22":1}}],["因此比ef",{"2":{"22":1}}],["我们在不能修改源码并且需要扩展的时候",{"2":{"133":1}}],["我们在客户端代码中创建了一个原型对象",{"2":{"67":1}}],["我们首先创建了具体组件对象",{"2":{"93":1}}],["我们调用装饰器对象b的操作方法",{"2":{"93":1}}],["我们调用根节点的显示方法",{"2":{"89":1}}],["我们调用",{"2":{"85":1}}],["我们创建了被适配者对象",{"2":{"97":1}}],["我们创建了具体装饰器对象",{"2":{"93":2}}],["我们创建了具体装饰器类",{"2":{"93":1}}],["我们创建了具体组件类",{"2":{"93":1}}],["我们创建了具体的实现部分",{"2":{"85":1}}],["我们创建了叶子组件类",{"2":{"89":1}}],["我们创建了一个适配器类",{"2":{"97":1}}],["我们创建了一个需要适配的类",{"2":{"97":1}}],["我们创建了一个树形结构",{"2":{"89":1}}],["我们创建了一个外观对象",{"2":{"81":1}}],["我们创建了一个外观类",{"2":{"81":1}}],["我们创建了一个具体的原型类",{"2":{"67":1}}],["我们可以灵活地扩展对象的功能",{"2":{"93":1}}],["我们可以构建出一个层次结构的组合对象",{"2":{"89":1}}],["我们可以简化复杂系统的使用",{"2":{"81":1}}],["我们可以在ef",{"2":{"22":1}}],["我们定义了三个子系统类",{"2":{"81":1}}],["我们定义了一个目标接口",{"2":{"97":1}}],["我们定义了一个装饰器抽象类",{"2":{"93":1}}],["我们定义了一个抽象类",{"2":{"89":1,"93":1}}],["我们定义了一个抽象的原型类",{"2":{"67":1}}],["我们定义了一个单例类",{"2":{"62":1}}],["我们就可以动态地向对象添加额外的功能",{"2":{"93":1}}],["我们就可以使用组合模式来表示对象的部分",{"2":{"89":1}}],["我们就可以通过适配器模式将一个类的接口转换成另一个接口",{"2":{"97":1}}],["我们就可以通过原型模式创建新的对象",{"2":{"67":1}}],["我们就可以通过单例模式确保一个类只有一个实例",{"2":{"62":1}}],["我们就是不想使用值类型的值",{"2":{"44":1}}],["我们通过",{"2":{"62":1}}],["我们使用双重检查锁定来确保只有一个实例被创建",{"2":{"62":1}}],["我们提供了对唯一实例的全局访问点",{"2":{"62":1}}],["我们处理的是值类型的行为",{"2":{"42":1}}],["我们要尽量避免客户端评估",{"2":{"22":1}}],["我们要避免",{"2":{"22":1}}],["同时保持对象接口的一致性",{"2":{"93":1}}],["同时将系统的内部结构与外部客户端分离",{"2":{"81":1}}],["同时也增加了系统具体类的依赖",{"2":{"71":1}}],["同时还提供了一些其他信息",{"2":{"43":1}}],["同样的道理也适用于属性",{"2":{"43":1}}],["同样的",{"2":{"22":1}}],["同步块索引",{"2":{"8":2}}],["服务器端评估",{"2":{"22":1}}],["就可以提升他们到超类中",{"2":{"204":1}}],["就可以合并成一个",{"2":{"126":1}}],["就会造成真正负责的类不做事",{"2":{"130":1}}],["就会有性能问题",{"2":{"22":1}}],["就是想用一个引用",{"2":{"44":1}}],["就需要把一张数据库表中的所有数据都加载到内存中",{"2":{"22":1}}],["long",{"2":{"169":2}}],["local",{"2":{"133":1}}],["lock",{"2":{"21":4,"62":6}}],["lockobject",{"2":{"21":6}}],["low",{"2":{"99":8,"144":4}}],["length",{"2":{"152":2,"170":4,"175":4}}],["leaf3",{"2":{"89":4}}],["leaf2",{"2":{"89":4}}],["leaf1",{"2":{"89":4}}],["leaf",{"2":{"89":27}}],["let",{"2":{"31":1}}],["let子句",{"0":{"31":1}}],["lastelement",{"2":{"150":4}}],["lastreading",{"2":{"150":4}}],["last",{"2":{"29":2}}],["lt",{"2":{"22":26,"33":4,"34":8,"52":4,"53":4,"89":4,"99":4,"170":4,"173":2,"175":4}}],["limit",{"2":{"179":2}}],["linq关键字",{"2":{"23":1}}],["linq",{"0":{"23":1},"1":{"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1}}],["liverpool",{"2":{"103":4}}],["live",{"2":{"1":1}}],["list",{"2":{"1":1,"89":4,"170":2}}],["lies",{"2":{"1":1}}],["而非重构",{"2":{"159":1}}],["而且不易管理",{"2":{"102":1}}],["而且不需要实例化",{"2":{"17":1}}],["而装饰器模式可以避免这种情况",{"2":{"91":1}}],["而不需要了解系统的内部结构和复杂性",{"2":{"81":1}}],["而不是该引用所指代的对象",{"2":{"43":1}}],["而只是想显示它们的接口而不是实现时",{"2":{"75":1}}],["而无需改变现有对象结构",{"2":{"92":1,"93":1}}],["而无需关心对象的创建细节",{"2":{"67":1}}],["而无需暴露对象的创建逻辑",{"2":{"64":1}}],["而无需自己去实现克隆方法",{"2":{"40":1}}],["而o的值就是对新对象的引用",{"2":{"44":1}}],["而o是引用类型的变量",{"2":{"44":1}}],["而i的值是5",{"2":{"44":1}}],["而引用类型的开头都需要包含一个数据块",{"2":{"43":1}}],["而是",{"2":{"43":1}}],["而是方法",{"2":{"21":1}}],["而结构",{"2":{"42":1}}],["而ef",{"2":{"22":1}}],["但你无法修改源代码",{"2":{"187":1}}],["但无论如何还是做了",{"2":{"157":1}}],["但函数本体却包含了不同的值",{"2":{"142":1}}],["但其中一个class不再需要另一个class的特性",{"2":{"106":1}}],["但其接口与系统要求的接口不一致时",{"2":{"95":1}}],["但不建议",{"2":{"135":1}}],["但不知道具体实现",{"2":{"46":1}}],["但不作为方法传递实参",{"2":{"13":1}}],["但是如果这些函数不完全相同",{"2":{"204":1}}],["但是",{"2":{"43":1}}],["但是字段不行",{"2":{"21":1}}],["但是字段可以",{"2":{"21":1}}],["但可用值类型实现",{"2":{"42":1}}],["但可以实现接口",{"2":{"38":1}}],["grade",{"2":{"197":12}}],["gravitational",{"2":{"107":4}}],["grossweightclass",{"2":{"52":6,"53":2}}],["group",{"2":{"27":1,"28":1}}],["group子句",{"0":{"27":1}}],["geniusxi",{"2":{"124":1}}],["generic",{"2":{"89":2}}],["getyear",{"2":{"187":4}}],["getmonth",{"2":{"187":4}}],["getmanager",{"2":{"186":8}}],["getmemberexpenselimit",{"2":{"179":4}}],["getinterestrate",{"2":{"182":6}}],["getdate",{"2":{"187":4}}],["getdaysoverdrawn",{"2":{"181":6}}],["getdepartment",{"2":{"186":4}}],["getdiscountlevel",{"2":{"145":2}}],["getexpenselimit",{"2":{"179":4}}],["getloadfactor",{"2":{"177":2}}],["getlow",{"2":{"99":4,"144":2}}],["getbasespeed",{"2":{"177":6}}],["getbalance",{"2":{"21":2}}],["getspeed",{"2":{"177":2}}],["getplan",{"2":{"178":2}}],["getpayamount",{"2":{"176":4}}],["getproduct",{"2":{"58":6}}],["getrating",{"2":{"163":4}}],["getvalueforperiod",{"2":{"152":4}}],["getname",{"2":{"108":2}}],["gethigh",{"2":{"99":4,"144":2}}],["get",{"2":{"21":4,"33":2,"58":2,"62":2,"118":1}}],["gt",{"0":{"5":2},"2":{"17":8,"22":46,"25":2,"33":2,"34":16,"51":5,"52":17,"53":10,"89":4,"99":5,"103":1,"107":1,"108":1,"143":1,"144":1,"145":1,"147":1,"150":1,"151":5,"152":3,"162":1,"163":5,"164":5,"165":5,"166":13,"167":1,"168":5,"170":1,"172":1,"173":3,"174":1,"175":1,"176":1,"179":1,"181":5,"182":1,"186":1,"187":1,"197":1,"205":1}}],["6",{"0":{"20":1},"1":{"21":1},"2":{"22":2}}],["可能需要修改外观类的代码",{"2":{"80":1}}],["可能需要修改原有的代码",{"2":{"61":1}}],["可按多个键排序",{"2":{"29":2}}],["可使用",{"2":{"28":1}}],["可使用复合键",{"2":{"27":1}}],["可与泛型配合使用",{"2":{"19":1}}],["可以建立一个子类继承date类",{"2":{"133":1}}],["可以提炼新的对象以适应此种特殊情况",{"2":{"128":1}}],["可以转化为单一对象",{"2":{"101":1}}],["可以让不兼容的类协同工作",{"2":{"96":1}}],["可以通过覆写的方法改变获取数据的途径",{"2":{"99":1}}],["可以通过嵌套装饰器类的方式",{"2":{"92":1}}],["可以通过递归组合对象的方式",{"2":{"88":1}}],["可以动态地向对象添加额外的功能",{"2":{"92":1}}],["可以动态添加或删除产品的部件",{"2":{"66":1}}],["可以简化客户端代码",{"2":{"88":1}}],["可以在运行时动态地切换抽象部分和实现部分的连接",{"2":{"84":1}}],["可以在不同的构建过程中重复使用相同的建造者",{"2":{"57":1}}],["可以将它变为一个实值对象",{"2":{"102":1}}],["可以将适配器类作为一个中间层",{"2":{"96":1}}],["可以将抽象部分和实现部分独立地扩展和修改",{"2":{"84":1}}],["可以将对象的创建与使用代码分离",{"2":{"69":1}}],["可以将各个功能分开",{"2":{"16":1}}],["可以减少子类的数量",{"2":{"66":1}}],["可以更好地控制对象的创建过程",{"2":{"66":1}}],["可以更好地控制构建过程",{"2":{"57":1}}],["可以实现对资源的集中管理和控制",{"2":{"61":1}}],["可以构建不同的表示",{"2":{"57":1}}],["可以使用replace",{"2":{"135":1}}],["可以使用工厂+策略模式",{"2":{"124":1}}],["可以使用该方法",{"2":{"112":1}}],["可以使用and",{"2":{"53":1}}],["可以使用接口的方法",{"2":{"49":1}}],["可以支持实现复杂的条件匹配",{"2":{"50":1}}],["可以便捷的进行浅拷贝",{"2":{"40":1}}],["可以继承",{"2":{"37":1}}],["可以传入数值",{"2":{"25":2}}],["可以看到方法声明如下",{"2":{"22":1}}],["可以看到",{"2":{"22":1}}],["可以声明为值类型",{"2":{"13":1}}],["+=",{"2":{"33":2,"181":4}}],["+",{"2":{"19":2,"34":6,"52":4,"53":2,"89":6,"162":8,"167":4,"172":2,"187":4}}],["参数",{"0":{"18":1},"1":{"19":1}}],["没有默认实现",{"2":{"17":1}}],["父类方法不知道如何去使用",{"2":{"17":1}}],["猫在叫",{"2":{"17":4}}],["vector",{"2":{"205":12}}],["vehicle",{"2":{"51":2}}],["voltage",{"2":{"177":2}}],["void",{"2":{"17":6,"19":2,"21":2,"33":6,"34":16,"47":3,"58":10,"62":4,"67":4,"72":8,"77":2,"81":10,"85":12,"89":20,"93":14,"97":8,"108":2,"112":2,"143":4,"147":2,"151":1,"162":4,"175":1,"182":2,"205":4}}],["var",{"2":{"22":4,"34":2}}],["values",{"2":{"152":6}}],["value",{"2":{"19":2,"21":4,"143":6,"149":2,"178":1}}],["virtual",{"2":{"17":2}}],["虚方法",{"0":{"17":1},"2":{"17":1}}],["将相同的特性移至超类中",{"2":{"201":1}}],["将相关的数据组织成一个类",{"2":{"123":1}}],["将上面的一部分特性转移到子类上",{"2":{"200":1}}],["将这个值域移到相关的子类中去",{"2":{"199":1}}],["将这个函数移到相关的子类中去",{"2":{"198":1}}],["将该函数移至超类",{"2":{"196":1}}],["将此值域移至超类",{"2":{"195":1}}],["将gui",{"2":{"192":1}}],["将领域和表述",{"0":{"192":1}}],["将过程化设计转化为对象设计",{"0":{"191":1}}],["将类内联化",{"0":{"184":1}}],["将其修改为private",{"2":{"148":1}}],["将他们作为某一次函数调用的参数",{"2":{"144":1}}],["将查询所得到的结果高速缓存于某个值域中",{"2":{"141":1}}],["将查询函数和修改函数分离",{"0":{"141":1}}],["将函数转换成函数对象",{"2":{"116":1}}],["将临时变量转换为函数的形式",{"2":{"116":1}}],["将说明的东西写进独立函数",{"2":{"116":1}}],["将双向关联改为单向",{"0":{"106":1}}],["将单向关联改为双向",{"0":{"105":1}}],["将引用对象改为实值对象",{"0":{"102":1}}],["将实值对象改为引用对象",{"0":{"101":1}}],["将抽象和实现解耦",{"2":{"82":1}}],["将系统的内部结构与外部客户端分离",{"2":{"80":1}}],["将接口作为参数传入类",{"2":{"49":1}}],["将i的值赋值给o",{"2":{"44":1}}],["将",{"2":{"28":1,"122":1,"150":1}}],["将一个类分布在各个代码文件中",{"2":{"16":1}}],["将托管模块合并成程序集",{"0":{"6":1}}],["密封类",{"2":{"15":1}}],["不论用户",{"2":{"154":1}}],["不完美的程序库类",{"0":{"133":1}}],["不要去考虑未来将有可能发生的事",{"2":{"127":1}}],["不易使用",{"2":{"118":1}}],["不需要改变",{"2":{"40":1}}],["不能被继承",{"2":{"15":1}}],["不能实例化的类",{"0":{"15":1}}],["不可重写",{"2":{"13":1}}],["不抛出异常",{"2":{"9":2}}],["未装箱和已装箱",{"2":{"13":1}}],["未进行初始化",{"2":{"13":2}}],["50",{"2":{"168":4}}],["5000",{"2":{"52":4,"53":4}}],["500",{"2":{"34":16}}],["5",{"0":{"18":1},"1":{"19":1},"2":{"13":1,"22":2,"25":2,"44":2,"52":4,"53":2,"163":4}}],["托管堆实例化对象",{"2":{"13":2}}],["托管模块",{"0":{"5":1}}],["x",{"2":{"13":2,"47":2}}],["==",{"2":{"62":4,"178":2}}],["==比较时则比较的是struct的真实值数据",{"2":{"38":1}}],["=",{"2":{"13":4,"17":8,"19":6,"21":4,"22":18,"27":4,"30":4,"31":2,"33":4,"34":12,"43":4,"44":6,"47":2,"51":4,"52":12,"53":10,"58":10,"62":6,"67":6,"72":4,"77":4,"81":8,"85":10,"89":16,"93":10,"97":6,"99":8,"103":8,"107":2,"108":2,"112":8,"143":8,"144":8,"145":10,"147":4,"149":8,"151":4,"152":2,"164":2,"165":2,"166":6,"167":8,"168":6,"170":4,"172":8,"174":8,"175":10,"176":8,"178":4,"179":8,"181":4,"186":6,"187":4,"197":8,"205":4}}],["性能更好",{"2":{"13":1}}],["枚举",{"2":{"13":1,"42":1}}],["结构型模式",{"0":{"82":1,"86":1,"90":1,"94":1},"1":{"83":1,"84":1,"85":1,"87":1,"88":1,"89":1,"91":1,"92":1,"93":1,"95":1,"96":1,"97":1}}],["结构和接口",{"0":{"16":1}}],["结构",{"2":{"13":1}}],["栈分配",{"2":{"13":1}}],["类",{"2":{"13":1,"42":1,"85":1}}],["类型的",{"2":{"22":1}}],["类型的扩展方法",{"2":{"22":1}}],["类型的实例较大",{"2":{"13":1}}],["类型的实例较小",{"2":{"13":1}}],["类型与成员基础",{"0":{"14":1},"1":{"15":1,"16":1,"17":1}}],["类型不派生出其他任何类型",{"2":{"13":1}}],["类型不需要从其他任何类型继承",{"2":{"13":1}}],["类型具有基元类型的行为",{"2":{"13":1}}],["类型安全",{"2":{"9":1}}],["类型转换",{"0":{"9":1}}],["类型对象指针",{"2":{"8":2}}],["类型基础",{"0":{"7":1},"1":{"8":1,"9":1,"10":1}}],["堆分配",{"2":{"13":1}}],["才允许隐式转换",{"2":{"12":1}}],["运行时的相互关系",{"0":{"10":1}}],["只需要修改一个函数",{"2":{"119":1}}],["只要看到两个子类之间有类似的函数",{"2":{"204":1}}],["只要扩展一个工厂类就可以",{"2":{"71":1}}],["只要知道其名称就可以了",{"2":{"71":1}}],["只能被override",{"2":{"15":1}}],["只有在转换安全时",{"2":{"12":1}}],["只返回true或false",{"2":{"9":1}}],["只是return",{"2":{"8":1}}],["初始化后",{"2":{"13":2}}],["初始化实例对象",{"2":{"8":1}}],["初始化对象的",{"2":{"8":1}}],["成员",{"2":{"8":1}}],["并经常为整个接口编写许多极简单的请托函数",{"2":{"206":1}}],["并不是所有注释都是友好的",{"2":{"136":1}}],["并在其",{"2":{"97":1}}],["并包含了一个组件对象",{"2":{"93":1}}],["并包含了对实现部分的引用",{"2":{"85":1}}],["并将具体装饰器对象a作为参数传递给装饰器对象b",{"2":{"93":3}}],["并将具体组件对象作为参数传递给装饰器对象a",{"2":{"93":3}}],["并通过实现部分完成具体的渲染操作",{"2":{"85":1}}],["并通过克隆方法创建了一个克隆对象",{"2":{"67":1}}],["并关联具体实现部分b",{"2":{"85":2}}],["并关联具体实现部分a",{"2":{"85":2}}],["并提供了一个统一的接口给客户端",{"2":{"81":1}}],["并提供一个统一的接口给客户端时",{"2":{"79":1}}],["并提供一个全局访问点来访问该实例",{"2":{"59":1}}],["并调用其方法",{"2":{"62":1}}],["并且希望客户端能够一致地处理单个对象和组合对象时",{"2":{"87":1}}],["并且两者可以独立地变化时",{"2":{"83":1}}],["并且你希望将那一个帮助子类是代理者这一信息局部化的时候",{"2":{"70":1}}],["并且可以统一地处理单个对象和组合对象",{"2":{"89":1}}],["并且可以克隆自身",{"2":{"67":1}}],["并且可以在整个系统中被访问",{"2":{"62":1}}],["并且该实例需要在整个系统中被访问时",{"2":{"60":1}}],["并且自动选择需要的依赖",{"2":{"6":1}}],["并发和多线程计算",{"2":{"40":1}}],["并初始化内存",{"2":{"8":1}}],["和shouldneverreachhere",{"2":{"179":1}}],["和容器组件类",{"2":{"89":1}}],["和",{"2":{"8":2,"9":1,"13":1,"42":1,"44":1,"53":1,"81":1,"85":3,"93":1}}],["计算类型及其所有基类",{"2":{"8":1}}],["操作符",{"2":{"8":1}}],["n95",{"2":{"77":4}}],["norwegian",{"2":{"177":2}}],["normalpayamount",{"2":{"176":4}}],["notsummer",{"2":{"172":2}}],["not",{"2":{"53":1}}],["non",{"2":{"34":2}}],["now",{"2":{"1":1,"19":2}}],["nextday",{"2":{"187":4}}],["net",{"2":{"124":1}}],["net提供了一个装箱的机制",{"2":{"44":1}}],["net中的大多数类型都是引用类型",{"2":{"42":1}}],["net中",{"2":{"42":1}}],["net中做的一切其实都是在和值类型或者引用类型打交道",{"2":{"41":1}}],["negative",{"2":{"34":4}}],["newstart",{"2":{"187":4}}],["newtype",{"2":{"112":4}}],["new",{"2":{"8":1,"13":2,"21":2,"27":2,"30":2,"33":8,"34":4,"43":2,"47":2,"58":6,"62":4,"67":4,"72":8,"77":8,"81":8,"85":8,"89":18,"93":6,"97":4,"103":4,"112":8,"149":8,"151":2,"170":2,"177":2,"187":4,"205":2}}],["null",{"2":{"33":2,"34":2,"62":4,"93":2,"178":2,"179":8}}],["nunit单元测试",{"0":{"32":1},"1":{"33":1,"34":1},"2":{"209":1}}],["num",{"2":{"25":4}}],["nums",{"2":{"22":2}}],["nums=",{"2":{"22":2}}],["numberofcoconuts",{"2":{"177":2}}],["numberoflatedeliveries",{"2":{"163":4}}],["number",{"2":{"19":10}}],["n",{"2":{"22":4}}],["namepublic",{"2":{"108":1}}],["namespace",{"2":{"33":1,"34":2}}],["nameof",{"2":{"33":8}}],["namegroup",{"2":{"27":1}}],["namefrom",{"2":{"26":1}}],["name",{"2":{"21":6,"26":1,"27":3,"30":2,"67":14,"89":20,"108":7,"123":2,"143":6,"162":8,"197":10}}],["45",{"2":{"19":1}}],["45void",{"2":{"19":1}}],["44",{"2":{"19":6}}],["4",{"0":{"6":1,"14":1},"1":{"15":1,"16":1,"17":1},"2":{"8":1,"13":2,"155":1}}],["描述模块引用了什么",{"2":{"5":1}}],["描述模块中定义了哪些类型或成员",{"2":{"5":1}}],["元数据",{"2":{"5":1}}],["由clr管理执行",{"2":{"5":1}}],["源代码文件",{"0":{"5":1}}],["365",{"2":{"182":4}}],["3000",{"2":{"52":4,"53":4}}],["39",{"2":{"31":4,"89":8,"97":2}}],["3",{"0":{"5":1,"10":1,"11":1,"17":1},"1":{"12":1,"13":1},"2":{"8":1,"13":2,"22":2,"89":2,"103":2,"155":1}}],["20",{"2":{"43":2}}],["2000",{"2":{"34":4}}],["2+3",{"2":{"43":1}}],["213",{"2":{"22":2}}],["2",{"0":{"4":1,"7":1,"9":1,"13":1,"16":1},"1":{"5":1,"8":1,"9":1,"10":1},"2":{"8":1,"13":2,"51":4,"52":4,"53":2,"89":6,"112":2,"149":2,"155":1,"163":4,"167":4,"168":4,"173":2}}],["安全性",{"0":{"3":1}}],["1=",{"2":{"108":1}}],["15",{"2":{"103":4}}],["1500",{"2":{"34":2}}],["1希望按照多个键对元素进行分组时",{"2":{"27":1}}],["1那么既然iqueryable继承ienumerable接口",{"2":{"22":1}}],["1这个where方法是一个iqueryable",{"2":{"22":1}}],["1同理",{"2":{"22":1}}],["1同样的",{"2":{"22":1}}],["12=",{"2":{"164":1,"168":1,"187":1}}],["12",{"2":{"29":1,"30":1,"43":1,"47":1,"145":1,"173":2,"178":1}}],["123=",{"2":{"52":1,"103":1,"107":1,"144":1,"145":1,"150":1,"172":1}}],["123i是值类型的变量",{"2":{"44":1}}],["1234=",{"2":{"99":1,"167":1}}],["1234",{"2":{"26":1,"107":1,"151":1,"152":1,"167":1,"197":1}}],["123456assert",{"2":{"179":1}}],["123456=",{"2":{"162":1,"163":1,"166":1,"173":1,"179":1,"182":1,"197":1}}],["123456",{"2":{"52":1,"53":1,"99":1,"143":1,"176":1,"186":1,"205":1}}],["1234567",{"2":{"166":1,"170":1}}],["1234567=",{"2":{"143":1,"152":1}}],["12345678csstatic",{"2":{"149":1}}],["12345678=",{"2":{"147":1,"151":1,"174":1}}],["12345678",{"2":{"19":1,"162":1,"165":1,"169":1}}],["12345678910",{"2":{"181":1,"182":1}}],["12345678910=",{"2":{"181":1,"205":1}}],["1234567891011",{"2":{"177":1}}],["123456789101112=",{"2":{"176":1,"186":1}}],["12345678910111213=",{"2":{"175":1}}],["1234567891011121314=",{"2":{"170":1}}],["1234567891011121314151617181920",{"2":{"112":1}}],["12345678910111213141516171819202122232425262728",{"2":{"123":1}}],["12345678910111213141516171819202122232425262728293031323334",{"2":{"77":1}}],["123456789101112131415161718192021222324252627282930313233343536373839404142434445464748在上面的示例中",{"2":{"97":1}}],["12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849在上面的示例中",{"2":{"62":1}}],["123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960在上面的示例中",{"2":{"81":1}}],["12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576在上面的示例中",{"2":{"93":1}}],["12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394在上面的示例中",{"2":{"89":1}}],["12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879",{"2":{"34":1}}],["1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071在上面的示例中",{"2":{"85":1}}],["12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364",{"2":{"58":1}}],["1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556",{"2":{"33":1}}],["123456789101112131415161718192021222324252627282930313233343536373839404142434445",{"2":{"72":1}}],["123456789101112131415161718192021222324252627282930313233343536373839404142434445在上面的示例中",{"2":{"67":1}}],["123456789101112131415161718192021",{"2":{"21":1}}],["123456789101112",{"2":{"149":1,"175":1}}],["1234567892",{"2":{"19":1}}],["123456789",{"2":{"17":1,"21":1}}],["123456783",{"2":{"17":1}}],["123456782",{"2":{"17":1}}],["1234567若满足以下全部条件",{"2":{"13":1}}],["12345",{"2":{"51":1,"147":1,"174":1,"187":1}}],["12345=",{"2":{"51":1,"165":1}}],["12345很明显",{"2":{"22":1}}],["12345我们再查看生成的sql语句",{"2":{"22":1}}],["12345上面代码生成的sql语句如下",{"2":{"22":1}}],["123",{"2":{"25":1,"103":1,"108":1,"150":1,"163":1,"168":1,"172":1,"173":1}}],["123可以看到",{"2":{"22":1}}],["12在where方法转到定义",{"2":{"22":1}}],["1000",{"2":{"34":2,"164":4,"165":4}}],["1000000000000001e0",{"2":{"22":1}}],["1000000000000001e0select",{"2":{"22":1}}],["10",{"2":{"22":2,"43":2,"52":12,"53":6,"181":4}}],["1",{"0":{"2":1,"3":1,"8":1,"12":1,"15":1},"1":{"3":1,"4":1,"5":1,"6":1},"2":{"8":1,"13":2,"17":1,"19":3,"22":18,"24":1,"27":1,"28":1,"30":2,"31":1,"47":3,"51":4,"89":4,"103":2,"112":2,"144":1,"149":2,"151":2,"155":1,"163":4,"164":1,"166":8,"181":4,"187":4}}],["wasresized",{"2":{"166":4}}],["wasinitialized",{"2":{"166":4}}],["wintercharge",{"2":{"172":2}}],["winterservicecharge",{"2":{"172":2}}],["winterrate",{"2":{"172":2}}],["width",{"2":{"143":6,"167":8}}],["withinrange",{"2":{"144":4}}],["withinplan",{"2":{"144":3}}],["with",{"2":{"85":4,"116":2,"118":1,"135":1}}],["withdrawing",{"2":{"34":6}}],["withdraw",{"2":{"33":4,"34":6,"151":4}}],["when",{"2":{"52":6,"53":2}}],["where子句",{"0":{"25":1}}],["where方法会在内存中对每条数据进行过滤",{"2":{"22":1}}],["where",{"2":{"1":1,"22":16,"25":4}}],["words",{"2":{"31":2}}],["w",{"2":{"28":4}}],["writeline",{"2":{"19":4,"22":4,"58":2,"62":2,"67":2,"81":6,"85":6,"89":8,"93":6,"97":2}}],["web",{"2":{"40":1}}],["we",{"2":{"1":1}}],["days",{"2":{"182":10}}],["daysoverdrawn",{"2":{"181":6}}],["daystemprange",{"2":{"144":6}}],["date",{"2":{"172":6,"187":12}}],["drawing",{"2":{"85":2}}],["draw",{"2":{"85":9}}],["dreaming",{"2":{"1":1}}],["disability",{"2":{"173":4}}],["disabilityamount",{"2":{"173":4}}],["discount",{"2":{"168":4}}],["discountedprice",{"2":{"145":4}}],["discountlevel",{"2":{"145":4}}],["display",{"2":{"58":4,"62":4,"67":6,"89":10}}],["director",{"2":{"58":10}}],["don",{"2":{"170":6,"175":4}}],["do",{"2":{"166":4}}],["double",{"2":{"33":12,"107":12,"145":4,"152":2,"162":6,"164":1,"165":3,"167":5,"169":8,"173":1,"176":4,"177":1,"179":2,"181":8,"182":14}}],["doing",{"2":{"1":1}}],["department",{"2":{"186":14}}],["depth",{"2":{"89":12}}],["deadamount",{"2":{"176":4}}],["details",{"2":{"124":1,"162":2}}],["default",{"2":{"112":2,"149":2}}],["defaultifempty",{"2":{"30":2}}],["decoratorb",{"2":{"93":7}}],["decoratora",{"2":{"93":7}}],["decorator",{"2":{"90":1,"93":12}}],["decimal",{"2":{"21":6}}],["delegating",{"2":{"206":1}}],["delegation",{"2":{"135":1,"206":1}}],["delegate",{"2":{"42":1,"47":2}}],["deliverytruck",{"2":{"52":6,"53":1}}],["overdraftcharge",{"2":{"181":4}}],["override",{"2":{"58":4,"67":2,"85":2,"89":12,"93":8}}],["overrider",{"2":{"17":6}}],["operationc",{"2":{"81":4}}],["operationb",{"2":{"81":4}}],["operation",{"2":{"81":10,"93":18}}],["operationa",{"2":{"81":4}}],["o对象的值就是对原始值的副本",{"2":{"44":1}}],["o的值必须是一个引用",{"2":{"44":1}}],["o",{"2":{"44":4}}],["otheraccount",{"2":{"33":8,"34":6}}],["object",{"2":{"21":4,"44":2,"62":4,"116":1,"150":1,"205":8}}],["object派生",{"0":{"8":1}}],["orderid",{"2":{"123":4}}],["order",{"2":{"123":4,"169":2}}],["orderby",{"2":{"29":3}}],["orderby子句",{"0":{"29":1}}],["or",{"2":{"1":1,"53":1,"179":2}}],["outargexample",{"2":{"19":4}}],["output",{"2":{"19":2}}],["out",{"2":{"1":1,"19":5,"162":8,"167":8}}],["outside",{"2":{"1":1}}],["of",{"2":{"1":2}}],["on",{"2":{"1":2,"30":6,"187":2}}],["billingplan",{"2":{"178":2}}],["blue",{"2":{"177":2}}],["blog",{"2":{"1":1,"124":1}}],["break",{"2":{"175":4}}],["browser",{"2":{"166":4}}],["branch2",{"2":{"89":8}}],["branch",{"2":{"89":4}}],["branch1",{"2":{"89":6}}],["bridge",{"2":{"82":1}}],["buildpart",{"2":{"58":6}}],["builder",{"2":{"55":1,"58":18}}],["builder模式",{"0":{"54":1},"1":{"55":1,"56":1,"57":1,"58":1}}],["both",{"2":{"34":2}}],["books表中的所有数据都加载到应用程序内存中",{"2":{"22":1}}],["books",{"2":{"22":20}}],["book",{"2":{"22":7}}],["boolean",{"2":{"99":4,"163":2,"166":6,"175":1}}],["bool",{"2":{"22":4}}],["by",{"2":{"27":4,"28":2}}],["basic",{"2":{"178":2}}],["baseprice",{"2":{"145":8,"164":8,"165":16}}],["base",{"2":{"85":2,"89":4,"93":4}}],["balanceexception",{"2":{"151":4}}],["balance",{"2":{"21":6,"33":18,"34":14,"151":8}}],["bankaccounttests",{"2":{"34":2}}],["bankaccount",{"2":{"21":2,"33":8,"34":6}}],["b",{"2":{"13":2,"22":28,"72":2,"81":2}}],["before",{"2":{"172":2}}],["be",{"2":{"1":2,"177":2,"187":2}}],["bjut",{"2":{"1":1}}],["https",{"2":{"124":1}}],["huawei",{"2":{"72":4}}],["height",{"2":{"107":8,"143":6,"167":8}}],["hello",{"2":{"47":2}}],["here",{"2":{"1":1}}],["hpprinter",{"2":{"17":2}}],["have",{"2":{"179":2}}],["hang",{"2":{"1":1}}],["hangzhou",{"2":{"1":1}}],["happen",{"2":{"1":1}}],["high",{"2":{"99":8,"144":4}}],["hi",{"0":{"1":1}}],["push",{"2":{"205":4}}],["pubtime",{"2":{"22":4}}],["public",{"2":{"17":21,"21":9,"33":14,"34":20,"47":1,"58":14,"62":6,"67":8,"72":2,"77":8,"81":10,"85":12,"89":24,"93":12,"97":6,"108":4,"123":6,"186":6,"197":3,"205":6}}],["people",{"2":{"170":18,"175":14}}],["perimeter",{"2":{"167":4}}],["periodnumber",{"2":{"152":10}}],["performance",{"2":{"103":3}}],["person",{"2":{"27":6,"186":10}}],["platform",{"2":{"166":4}}],["plan",{"2":{"144":4,"178":4}}],["pop",{"2":{"205":2}}],["potentialenergy",{"2":{"107":4}}],["point",{"2":{"43":5}}],["phone",{"2":{"72":10,"77":10}}],["photos",{"2":{"1":3}}],["photography",{"2":{"1":1}}],["p2",{"2":{"43":2}}],["p1",{"2":{"43":4}}],["previousend",{"2":{"187":8}}],["predicate",{"2":{"22":4}}],["primaryproject",{"2":{"179":6}}],["primary",{"2":{"179":2}}],["primarybaseprice",{"2":{"169":2}}],["price",{"2":{"22":14,"123":4,"169":2,"174":8}}],["private",{"2":{"21":6,"33":2,"34":2,"58":2,"62":6,"67":2,"81":6,"89":2,"97":2,"99":2,"108":1,"123":18,"147":4,"149":2,"182":8,"186":2,"187":2,"205":2}}],["printdetails",{"2":{"162":4}}],["println",{"2":{"162":8,"167":8}}],["printbanner",{"2":{"162":4}}],["printowing",{"2":{"162":4}}],["printstring",{"2":{"47":4}}],["print",{"2":{"17":12,"162":2}}],["project",{"2":{"179":2}}],["projects",{"2":{"1":1}}],["protected",{"2":{"85":2,"89":2,"93":2}}],["prototype",{"0":{"64":1},"1":{"65":1,"66":1,"67":1},"2":{"67":21}}],["program",{"2":{"58":2,"62":2,"67":2,"72":2,"77":2,"81":2,"85":2,"89":2,"93":2,"97":2}}],["programming",{"2":{"1":1}}],["proc",{"2":{"47":5}}],["product",{"2":{"30":2,"58":22}}],["products",{"2":{"30":6}}],["prodgroup",{"2":{"30":4}}],["prod",{"2":{"30":12}}],["parameter",{"2":{"118":1}}],["part",{"2":{"58":10}}],["partial",{"2":{"16":1}}],["pattern",{"0":{"64":1},"1":{"65":1,"66":1,"67":1},"2":{"50":1,"55":1,"59":1,"69":1,"74":1,"78":1,"82":1,"86":1,"90":1,"94":1}}],["passion",{"2":{"1":1}}],["p90",{"2":{"10":1}}],["false",{"2":{"175":2}}],["facade",{"2":{"78":1,"81":14}}],["factory",{"2":{"69":1,"72":10,"74":1,"77":8}}],["finalprice",{"2":{"145":4}}],["final",{"2":{"107":2,"112":6,"147":2,"149":6,"166":5,"167":3}}],["find",{"2":{"1":1}}],["firstelement",{"2":{"205":2}}],["first",{"2":{"29":2}}],["fruitgroup",{"2":{"28":1}}],["fruitgroupgroup",{"2":{"28":1}}],["from子句",{"0":{"24":1}}],["from",{"2":{"1":1,"22":4,"30":2,"89":2}}],["foreign",{"2":{"187":2}}],["foreach",{"2":{"22":4,"89":2}}],["for",{"2":{"170":4,"175":4}}],["foundperson",{"2":{"170":4}}],["found",{"2":{"1":1,"175":8}}],["funds",{"2":{"34":10}}],["func",{"2":{"22":4}}],["full",{"2":{"1":1}}],["customer",{"2":{"178":4}}],["custom",{"2":{"123":6}}],["customsex",{"2":{"123":2}}],["customname",{"2":{"123":2}}],["currently",{"2":{"1":1}}],["checksecurity",{"2":{"175":2}}],["chen",{"0":{"1":1}}],["charge",{"2":{"172":8}}],["chains",{"2":{"130":1}}],["children",{"2":{"89":8}}],["circleb",{"2":{"85":5}}],["circlea",{"2":{"85":5}}],["circle",{"2":{"85":10}}],["city",{"2":{"1":1,"27":4}}],["create",{"2":{"149":2}}],["createmask",{"2":{"77":4}}],["createphone",{"2":{"72":10,"77":6}}],["cry",{"2":{"17":8}}],["c",{"0":{"41":1,"209":1},"1":{"42":1,"43":1,"44":1},"2":{"44":1,"49":2,"50":1,"51":2,"52":1,"81":2}}],["ctx",{"2":{"22":6}}],["case",{"2":{"72":4,"112":6,"149":6,"177":6}}],["car",{"2":{"51":4}}],["catch",{"2":{"152":2}}],["cat类",{"2":{"49":1}}],["categoryid",{"2":{"30":6}}],["categoryidjoin",{"2":{"30":2}}],["category",{"2":{"30":6}}],["cat",{"2":{"17":4}}],["candidates",{"2":{"170":4}}],["cannot",{"2":{"89":4}}],["can",{"2":{"1":3}}],["clone",{"2":{"67":11}}],["class中的某些特性只被某些实体用到",{"2":{"200":1}}],["class中的领域逻辑分离出来",{"2":{"192":1}}],["class应该有多个函数",{"2":{"179":1}}],["class将多个相同前后缀的变量提炼到一个组件内",{"2":{"117":1}}],["class声明",{"2":{"42":1}}],["class是我们日常开发中最常用的类型",{"2":{"37":1}}],["classlibrary1",{"2":{"33":2,"34":2}}],["class",{"0":{"36":1,"37":1},"1":{"37":1,"38":1,"39":1,"40":1},"2":{"13":4,"17":8,"21":2,"33":2,"34":4,"58":10,"62":4,"67":6,"72":8,"77":8,"81":10,"85":10,"89":8,"93":12,"97":6,"112":3,"123":6,"147":2,"149":1,"169":1,"181":2,"182":2,"186":4,"197":1,"205":2}}],["clr将运行在堆上创建一个新的对象",{"2":{"44":1}}],["clr要求所有对象都通过new创建",{"2":{"8":1}}],["clr可以自动判断程序集中执行的代码",{"2":{"6":1}}],["clr的核心功能",{"0":{"3":1}}],["clr基础",{"0":{"2":1},"1":{"3":1,"4":1,"5":1,"6":1}}],["csboolean",{"2":{"175":1}}],["csfinal",{"2":{"166":1,"167":1}}],["csreturn",{"2":{"164":1}}],["csreading",{"2":{"150":1}}],["csobject",{"2":{"150":1}}],["cswithinplan",{"2":{"144":1}}],["csclass",{"2":{"112":1,"147":2,"149":1,"169":1,"181":2,"182":2,"186":2,"197":1,"205":2}}],["csdate",{"2":{"187":2}}],["csdn",{"2":{"124":1}}],["csdn博客",{"2":{"49":1}}],["csdouble",{"2":{"107":2,"152":2,"164":1,"165":1,"167":1,"173":2,"176":2,"177":1,"179":2}}],["csdeliverytruck",{"2":{"52":2,"53":1}}],["csvehicle",{"2":{"51":2}}],["csvoid",{"2":{"19":1,"47":1,"143":2,"151":1,"162":2,"175":1}}],["csstring",{"2":{"103":1,"170":2}}],["csstringprocessor",{"2":{"47":1}}],["csselect",{"2":{"22":2}}],["csperformance",{"2":{"103":1}}],["csprivate",{"2":{"99":2,"108":1}}],["csproc",{"2":{"47":1}}],["cspoint",{"2":{"43":1}}],["cspublic",{"2":{"17":3,"21":1,"22":1,"47":1,"108":1,"197":1}}],["csusing",{"2":{"34":1,"58":1,"62":1,"67":1,"72":1,"77":1,"81":1,"89":1,"93":1,"97":1}}],["csnamespace",{"2":{"33":1}}],["csif",{"2":{"165":1,"166":1,"172":2,"174":2,"178":1}}],["csiqueryable",{"2":{"22":3}}],["csienumerable",{"2":{"22":2}}],["csint",{"2":{"19":1,"22":1,"44":1,"144":1,"145":2,"151":1,"163":2,"168":2}}],["cs",{"2":{"13":1,"21":1,"85":1,"123":1}}],["compute",{"2":{"173":4}}],["computation",{"2":{"169":2}}],["component",{"2":{"89":47,"93":32}}],["composite",{"2":{"86":1,"89":17}}],["com",{"2":{"160":1}}],["come",{"2":{"1":1}}],["contains",{"2":{"170":2}}],["concretedecoratorb",{"2":{"93":5}}],["concretedecoratora",{"2":{"93":5}}],["concretecomponent",{"2":{"93":5}}],["concreteprototype",{"2":{"67":9}}],["concretebuilder",{"2":{"58":4}}],["constant",{"2":{"107":4}}],["construct",{"2":{"58":4}}],["console",{"2":{"19":4,"22":4,"58":2,"62":2,"67":2,"81":6,"85":6,"89":8,"93":6,"97":2}}],["core的时候",{"2":{"22":1}}],["core的dbset类型上调用where之类的方法进行数据筛选",{"2":{"22":1}}],["core在数据服务器上的语句是服务端评估",{"2":{"22":1}}],["core中的where实现必须有一套可以让数据的筛选在数据库服务器上执行",{"2":{"22":1}}],["core如果也把数据都在内存中进行过滤的话",{"2":{"22":1}}],["collections",{"2":{"22":2,"89":2}}],["code",{"2":{"1":1,"112":7,"149":2}}],["should",{"2":{"177":2,"179":2,"187":2}}],["shouldneverreachhere",{"2":{"143":2}}],["shape",{"2":{"85":11}}],["share",{"2":{"1":1}}],["salesman",{"2":{"112":6,"149":6}}],["same",{"2":{"1":1}}],["s",{"2":{"97":2}}],["specific",{"2":{"97":2}}],["specificrequest",{"2":{"97":6}}],["split",{"2":{"31":2}}],["super",{"2":{"197":2}}],["summercharge",{"2":{"172":2}}],["summerrate",{"2":{"172":2}}],["summer",{"2":{"172":4}}],["subsystemc",{"2":{"81":13}}],["subsystemb",{"2":{"81":13}}],["subsystem",{"2":{"81":6}}],["subsystema",{"2":{"81":13}}],["surname",{"2":{"27":2}}],["singleton",{"2":{"59":1,"62":22}}],["switch语句的问题在于重复",{"2":{"124":1}}],["switch惊悚现身",{"0":{"124":1}}],["switch",{"2":{"50":1,"51":4,"52":2,"53":2,"72":2,"112":2,"149":2,"177":2}}],["system",{"2":{"22":2,"58":2,"62":2,"67":2,"72":2,"77":2,"81":2,"89":4,"93":2,"97":2,"162":8,"167":8}}],["source",{"2":{"22":4}}],["something",{"2":{"166":4}}],["some",{"2":{"1":3}}],["start",{"2":{"172":2}}],["static",{"2":{"58":2,"62":8,"67":2,"72":2,"77":2,"81":2,"85":2,"89":2,"93":2,"97":2,"107":2,"112":8,"149":7,"187":2}}],["strategy",{"0":{"112":1}}],["struct声明",{"2":{"42":1}}],["struct存放于栈上",{"2":{"38":1}}],["struct不支持继承和多态",{"2":{"38":1}}],["struct",{"0":{"38":1}}],["struct与record的区别",{"0":{"36":1},"1":{"37":1,"38":1,"39":1,"40":1}}],["stringprocessor",{"2":{"47":5}}],["string",{"2":{"21":6,"30":2,"47":4,"58":4,"62":2,"67":6,"72":2,"77":2,"81":2,"85":2,"89":14,"93":2,"97":2,"103":3,"108":8,"123":8,"143":2,"147":10,"170":8,"175":2,"197":8}}],["student",{"2":{"1":1,"27":4,"29":4}}],["separatedamount",{"2":{"176":4}}],["secondarybaseprice",{"2":{"169":2}}],["sendalert",{"2":{"175":8}}],["send",{"2":{"174":6}}],["sentence",{"2":{"31":2}}],["seniority",{"2":{"173":2}}],["senior",{"2":{"1":1}}],["select子句",{"0":{"26":1}}],["select",{"2":{"22":1,"26":4,"28":1}}],["setinterestrate",{"2":{"182":4}}],["setid",{"2":{"147":4}}],["set方法",{"2":{"182":2}}],["set方法封装起来",{"2":{"134":1}}],["setwidth",{"2":{"143":2}}],["setwins",{"2":{"103":2}}],["setheight",{"2":{"143":2}}],["setvalue",{"2":{"143":2}}],["settype",{"2":{"112":2}}],["setname",{"2":{"103":2,"108":2}}],["setcomponent",{"2":{"93":6}}],["setup",{"2":{"34":4}}],["setbalance",{"2":{"21":2}}],["set",{"2":{"21":4,"58":2}}],["sealed",{"2":{"15":1,"62":2}}],["african",{"2":{"177":2}}],["after",{"2":{"172":2}}],["api",{"2":{"40":1}}],["act",{"2":{"34":12}}],["accounttype",{"2":{"181":2,"182":2}}],["accounts",{"2":{"34":2}}],["account",{"2":{"34":26,"147":8,"181":12,"182":4}}],["area",{"2":{"167":4}}],["areequal",{"2":{"34":2}}],["arrays",{"2":{"170":2}}],["arrayindexoutofboundsexception",{"2":{"152":2}}],["arrange",{"2":{"34":4}}],["article",{"2":{"124":1}}],["articles",{"2":{"1":1}}],["arg",{"2":{"99":12,"108":4,"112":4,"143":8,"147":4,"182":4,"187":8}}],["args",{"2":{"58":2,"62":2,"67":2,"72":2,"77":2,"81":2,"85":2,"89":2,"93":2,"97":2}}],["argumentnullexception",{"2":{"33":2,"34":2}}],["argumentoutofrangeexception",{"2":{"33":6,"34":6}}],["adaptee",{"2":{"97":28}}],["adapter",{"2":{"94":1,"97":12}}],["address",{"2":{"123":2}}],["adding",{"2":{"34":4}}],["add",{"2":{"33":4,"34":4,"89":20}}],["admitted",{"2":{"1":1}}],["authorname",{"2":{"22":4}}],["aip",{"2":{"21":2}}],["abstractfactory",{"2":{"77":6}}],["abstract",{"2":{"17":2,"58":6,"67":4,"74":1,"85":4,"89":8,"93":6}}],["about",{"0":{"0":1},"1":{"1":1}}],["anorder",{"2":{"164":4}}],["animal",{"2":{"17":8}}],["and",{"2":{"1":4,"53":2}}],["aslist",{"2":{"170":2}}],["assert",{"2":{"34":28,"143":2,"179":2}}],["ascending",{"2":{"29":4}}],["as",{"2":{"22":4}}],["as类似于强制转换",{"2":{"9":1}}],["as来转型",{"2":{"9":1}}],["also",{"2":{"1":1}}],["amp",{"2":{"99":8,"166":24}}],["amountdouble",{"2":{"173":1}}],["amount",{"2":{"33":26,"151":12,"162":16,"173":3,"182":8}}],["am",{"2":{"1":1}}],["a",{"2":{"1":1,"13":8,"72":4,"81":2,"85":2,"89":4,"179":2}}],["👋",{"0":{"1":1}}],["type",{"2":{"112":3,"149":14,"177":2,"181":2,"182":6}}],["t",{"2":{"22":30,"52":12,"53":4}}],["title",{"2":{"22":8}}],["title=",{"2":{"22":4}}],["than",{"2":{"34":2}}],["that",{"2":{"34":6}}],["throws",{"2":{"34":16,"151":2}}],["throw",{"2":{"33":8,"112":2,"149":2,"151":2,"177":2}}],["this",{"2":{"22":4,"33":2}}],["the",{"2":{"1":1,"173":4}}],["them",{"2":{"1":1}}],["there",{"0":{"1":1}}],["tsource",{"2":{"22":17}}],["tertiarybaseprice",{"2":{"169":2}}],["temp",{"2":{"116":1,"167":8}}],["tests",{"2":{"34":2}}],["testproject1",{"2":{"34":2}}],["test",{"2":{"17":2,"34":14}}],["technical",{"2":{"1":1}}],["take",{"2":{"1":1}}],["tao",{"0":{"1":1}}],["try",{"2":{"152":2}}],["transfer",{"2":{"34":2}}],["transfering",{"2":{"34":2}}],["transferfundsto",{"2":{"33":2,"34":4}}],["traveling",{"2":{"1":1}}],["true",{"2":{"1":1,"175":4}}],["total",{"2":{"174":8}}],["touppercase",{"2":{"166":8}}],["together",{"2":{"1":1}}],["to",{"2":{"1":2,"34":2,"89":2}}],["monthsdisabled",{"2":{"173":2}}],["morethanfivelatedeliveries",{"2":{"163":4}}],["more",{"2":{"34":2}}],["mac",{"2":{"166":4}}],["manager",{"2":{"112":6,"149":6,"186":12,"197":6}}],["mass",{"2":{"107":8}}],["mask",{"2":{"77":8}}],["main",{"2":{"58":2,"62":2,"67":2,"72":2,"77":2,"81":2,"85":2,"89":2,"93":2,"97":2}}],["matching",{"2":{"50":1}}],["maybe",{"2":{"1":1}}],["making",{"2":{"1":1}}],["mystack",{"2":{"205":4}}],["my",{"2":{"1":3}}],["m",{"0":{"1":1}}],["message",{"2":{"130":1}}],["methods",{"2":{"206":1}}],["method进行函数的分解",{"2":{"121":1}}],["method",{"2":{"19":4,"116":2,"118":1,"187":2}}],["me",{"0":{"0":1},"1":{"1":1}}],["i=0",{"2":{"170":2}}],["i++",{"2":{"170":4,"175":4}}],["ie",{"2":{"166":4}}],["ienumerablepublic",{"2":{"22":1}}],["ienumerable",{"2":{"22":5,"23":1}}],["ienumerable与iqueryable",{"0":{"22":1}}],["ienumberable",{"2":{"22":2}}],["illegalargumentexception",{"2":{"112":2,"149":2}}],["il代码",{"2":{"5":1}}],["il代码和元数据",{"0":{"5":1}}],["itarget",{"2":{"97":7}}],["itemprice",{"2":{"145":4,"165":4}}],["item",{"2":{"24":2,"26":6,"30":2}}],["itemsfrom",{"2":{"24":1}}],["items",{"2":{"22":2,"24":1,"26":2}}],["irenderer",{"2":{"85":17}}],["iphone",{"2":{"72":6,"77":6}}],["iprinter",{"2":{"17":4}}],["id",{"2":{"22":8,"30":6,"147":16,"197":10}}],["id=",{"2":{"22":4}}],["ideas",{"2":{"1":1}}],["iqueryable",{"2":{"22":7,"23":1}}],["insertelementat",{"2":{"205":4}}],["instance",{"2":{"62":19}}],["indexof",{"2":{"166":8}}],["inheritance",{"2":{"135":1}}],["incorrect",{"2":{"112":2,"149":2}}],["includes",{"2":{"99":4}}],["invoke",{"2":{"47":1}}],["inputval",{"2":{"168":12}}],["input",{"2":{"47":2}}],["initializeinmethod",{"2":{"19":6}}],["introduce",{"2":{"133":1}}],["interestforamountanddays",{"2":{"182":2}}],["interestforamount",{"2":{"182":2}}],["interestrate",{"2":{"182":4}}],["interface",{"2":{"17":4,"22":2,"42":1,"72":2,"77":6,"85":2,"97":2}}],["integer",{"2":{"123":8}}],["int是值类型",{"2":{"42":1}}],["into",{"0":{"28":1},"2":{"28":3,"30":2}}],["int",{"2":{"13":4,"19":7,"22":3,"42":1,"44":4,"89":6,"99":12,"112":10,"143":6,"144":3,"145":2,"149":12,"151":5,"152":4,"163":2,"168":16,"170":4,"175":4,"182":4,"197":4}}],["in",{"2":{"1":2,"22":4,"24":2,"26":2,"30":8,"89":2}}],["if",{"2":{"1":1,"33":8,"62":4,"93":2,"143":4,"151":4,"152":2,"165":3,"166":3,"168":4,"170":8,"172":2,"173":8,"174":2,"175":10,"176":12,"178":1,"181":8}}],["ispremium",{"2":{"181":4}}],["isparttime",{"2":{"173":2}}],["istrue",{"2":{"179":2}}],["isnailed",{"2":{"177":2}}],["isnoteligablefordisability",{"2":{"173":2}}],["isretired",{"2":{"176":4}}],["isseparated",{"2":{"176":4}}],["isspecialdeal",{"2":{"174":4}}],["isdead",{"2":{"176":4}}],["isiebrowser",{"2":{"166":4}}],["ismacos",{"2":{"166":4}}],["iseven",{"2":{"25":2}}],["is检查对象是否兼容指定类型",{"2":{"9":1}}],["is",{"2":{"1":1,"19":2,"33":2,"34":6}}],["i",{"0":{"1":1},"2":{"1":4,"44":4,"170":16,"175":16}}]],"serializationVersion":2}`;export{e as default};
