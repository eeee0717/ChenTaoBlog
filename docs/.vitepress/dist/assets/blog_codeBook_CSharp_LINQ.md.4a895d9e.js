import{_ as s,o as a,c as e,Q as n}from"./chunks/framework.030aafca.js";const E=JSON.parse('{"title":"LINQ","description":"","frontmatter":{},"headers":[],"relativePath":"blog/codeBook/CSharp/LINQ.md","filePath":"blog/codeBook/CSharp/LINQ.md","lastUpdated":1698559739000}'),p={name:"blog/codeBook/CSharp/LINQ.md"},l=n(`<h1 id="linq" tabindex="-1">LINQ <a class="header-anchor" href="#linq" aria-label="Permalink to &quot;LINQ&quot;">​</a></h1><p>查询表达式</p><p>应用对象：IEnumerable 或 IQueryable</p><p><a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/keywords/query-keywords" target="_blank" rel="noreferrer">LINQ关键字</a></p><h3 id="from子句" tabindex="-1">from子句 <a class="header-anchor" href="#from子句" aria-label="Permalink to &quot;from子句&quot;">​</a></h3><p>查询表达式必须以from开头，效果可以类比foreach</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">from item </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> items</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">from item </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> items</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="where子句" tabindex="-1">where子句 <a class="header-anchor" href="#where子句" aria-label="Permalink to &quot;where子句&quot;">​</a></h3><p>指定将在查询表达式中返回数据源中的哪些元素</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 可以传入数值 也可以 传入函数</span></span>
<span class="line"><span style="color:#E1E4E8;">where num </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span></span>
<span class="line"><span style="color:#E1E4E8;">where </span><span style="color:#B392F0;">IsEven</span><span style="color:#E1E4E8;">(num)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 可以传入数值 也可以 传入函数</span></span>
<span class="line"><span style="color:#24292E;">where num </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#24292E;">where </span><span style="color:#6F42C1;">IsEven</span><span style="color:#24292E;">(num)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="select子句" tabindex="-1">select子句 <a class="header-anchor" href="#select子句" aria-label="Permalink to &quot;select子句&quot;">​</a></h3><p>选择筛选的结果</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">from item </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> items</span></span>
<span class="line"><span style="color:#E1E4E8;">select item</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">select item.name</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">from item </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> items</span></span>
<span class="line"><span style="color:#24292E;">select item</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">select item.name</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="group子句" tabindex="-1">group子句 <a class="header-anchor" href="#group子句" aria-label="Permalink to &quot;group子句&quot;">​</a></h3><p>分组</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">group student by student.name</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">group student by student.name</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>希望按照多个键对元素进行分组时，可使用复合键。 使用匿名类型或命名类型来存储键元素，创建复合键。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">group person by </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> {name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> person.surname, city </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> person.city};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">group person by </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> {name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> person.surname, city </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> person.city};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="into" tabindex="-1">into <a class="header-anchor" href="#into" aria-label="Permalink to &quot;into&quot;">​</a></h3><p>可使用 <code>into</code> 上下文关键字创建临时标识符，将 <a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/keywords/group-clause" target="_blank" rel="noreferrer">group</a>、<a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/keywords/join-clause" target="_blank" rel="noreferrer">join</a> 或 <a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/keywords/select-clause" target="_blank" rel="noreferrer">select</a> 子句的结果存储至新标识符</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">group w by w[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">] into fruitGroup</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">group w by w[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] into fruitGroup</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="orderby子句" tabindex="-1">orderby子句 <a class="header-anchor" href="#orderby子句" aria-label="Permalink to &quot;orderby子句&quot;">​</a></h3><p>在查询表达式中，<code>orderby</code> 子句可导致返回的序列或子序列（组）以升序或降序排序。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 可按多个键排序 默认升序</span></span>
<span class="line"><span style="color:#E1E4E8;">orderby student.Last ascending, student.First ascending</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 可按多个键排序 默认升序</span></span>
<span class="line"><span style="color:#24292E;">orderby student.Last ascending, student.First ascending</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="join-联接" tabindex="-1">join 联接 <a class="header-anchor" href="#join-联接" aria-label="Permalink to &quot;join 联接&quot;">​</a></h3><p><code>join</code> 子句可用于将来自不同源序列并且在对象模型中没有直接关系的元素相关联。</p><ol><li>内部联接</li></ol><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">join prod </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> products on category.</span><span style="color:#79B8FF;">ID</span><span style="color:#E1E4E8;"> equals prod.CategoryID</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">join prod </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> products on category.</span><span style="color:#005CC5;">ID</span><span style="color:#24292E;"> equals prod.CategoryID</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>分组联接</li></ol><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">join prod </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> products on category.</span><span style="color:#79B8FF;">ID</span><span style="color:#E1E4E8;"> equals prod.CategoryID</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">join prod </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> products on category.</span><span style="color:#005CC5;">ID</span><span style="color:#24292E;"> equals prod.CategoryID</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="3"><li>左外部联接(需要使用DefaultIfEmpty）</li></ol><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">join prod </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> products on category.</span><span style="color:#79B8FF;">ID</span><span style="color:#E1E4E8;"> equals prod.CategoryID into prodGroup</span></span>
<span class="line"><span style="color:#E1E4E8;">from item </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> prodGroup.</span><span style="color:#B392F0;">DefaultIfEmpty</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Product { Name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> String.Empty, CategoryID </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">join prod </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> products on category.</span><span style="color:#005CC5;">ID</span><span style="color:#24292E;"> equals prod.CategoryID into prodGroup</span></span>
<span class="line"><span style="color:#24292E;">from item </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> prodGroup.</span><span style="color:#6F42C1;">DefaultIfEmpty</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Product { Name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> String.Empty, CategoryID </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="let子句" tabindex="-1">let子句 <a class="header-anchor" href="#let子句" aria-label="Permalink to &quot;let子句&quot;">​</a></h3><p>用于存储子表达式</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> words </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sentence.</span><span style="color:#B392F0;">Split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39; &#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> words </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sentence.</span><span style="color:#6F42C1;">Split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,35),o=[l];function r(t,c,i,d,y,u){return a(),e("div",null,o)}const b=s(p,[["render",r]]);export{E as __pageData,b as default};
